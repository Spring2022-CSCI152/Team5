{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juanc\\\\Desktop\\\\Pomo 2.0_V2\\\\Team5-55b01a0a991b27ce3a0be7ca18bfc9e31c8f4882\\\\client\\\\src\\\\components\\\\TimerPage\\\\Menu\\\\TimerAdjust.js\";\nimport React, { useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport Dialog from '@mui/material/Dialog';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport Typography from '@mui/material/Typography';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport ButtonGroup from '@mui/material/ButtonGroup'; // for adjust group (move into sep component once functionality is clear)\n\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport TextField from '@mui/material/TextField';\nimport TimeMath from '../../../services/TimeMath';\n\nconst AdjustGroup = _ref => {\n  let {\n    title,\n    handleAddClick,\n    handleSubClick,\n    newLength,\n    setNewLength\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      textAlign: 'center',\n      flexDirection: 'column',\n      mb: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: newLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ButtonGroup, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => {\n      handleAddClick(newLength, setNewLength);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 92\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => {\n      handleSubClick(newLength, setNewLength);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(RemoveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 92\n    }\n  }), \" \"))));\n}; // for now this breaks the progress bar which i have to fix\n\n\nconst TimerAdjust = _ref2 => {\n  let {\n    pomodoro,\n    setPomodoro,\n    shortBreak,\n    setShortBreak,\n    longBreak,\n    setLongBreak,\n    setTimerSeconds\n  } = _ref2;\n  const [open, setOpen] = useState(false);\n  const [newPomodoroLength, setNewPomodoroLength] = useState(pomodoro);\n  const [newShortBreakLength, setNewShortBreakLength] = useState(shortBreak);\n  const [newLongBreakLength, setNewLongBreakLength] = useState(longBreak);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setPomodoro(newPomodoroLength);\n    setShortBreak(newShortBreakLength);\n    setLongBreak(newLongBreakLength); // future use probably find a way to find the currently active timer so it doesnt recent the timer if the user were to update it while they are on a break or something\n\n    setTimerSeconds(TimeMath.convMinSec(newPomodoroLength));\n  }; // setTimerSeconds(TimeMath.convMinSec(pomodoro));\n\n\n  const handleAddClick = (menuMinute, setMenuMinute) => {\n    setMenuMinute(menuMinute + 1);\n  };\n\n  const handleSubClick = (menuMinute, setMenuMinute) => {\n    if (menuMinute - 1 <= 1) {\n      setMenuMinute(1);\n    } else {\n      setMenuMinute(menuMinute - 1);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SettingsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AdjustGroup, {\n    title: 'Pomodoro',\n    handleAddClick: handleAddClick,\n    handleSubClick: handleSubClick,\n    newLength: newPomodoroLength,\n    setNewLength: setNewPomodoroLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(AdjustGroup, {\n    title: 'Short Break',\n    handleAddClick: handleAddClick,\n    handleSubClick: handleSubClick,\n    newLength: newShortBreakLength,\n    setNewLength: setNewShortBreakLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(AdjustGroup, {\n    title: 'Long Break',\n    handleAddClick: handleAddClick,\n    handleSubClick: handleSubClick,\n    newLength: newLongBreakLength,\n    setNewLength: setNewLongBreakLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })))));\n};\n\nexport default TimerAdjust;","map":{"version":3,"sources":["C:/Users/juanc/Desktop/Pomo 2.0_V2/Team5-55b01a0a991b27ce3a0be7ca18bfc9e31c8f4882/client/src/components/TimerPage/Menu/TimerAdjust.js"],"names":["React","useState","IconButton","Box","Dialog","SettingsIcon","Typography","ClickAwayListener","ButtonGroup","AddIcon","RemoveIcon","TextField","TimeMath","AdjustGroup","title","handleAddClick","handleSubClick","newLength","setNewLength","display","textAlign","flexDirection","mb","alignItems","TimerAdjust","pomodoro","setPomodoro","shortBreak","setShortBreak","longBreak","setLongBreak","setTimerSeconds","open","setOpen","newPomodoroLength","setNewPomodoroLength","newShortBreakLength","setNewShortBreakLength","newLongBreakLength","setNewLongBreakLength","handleClickOpen","handleClose","convMinSec","menuMinute","setMenuMinute","margin"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport Dialog from '@mui/material/Dialog';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport Typography from '@mui/material/Typography';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport ButtonGroup from '@mui/material/ButtonGroup';\n// for adjust group (move into sep component once functionality is clear)\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport TextField from '@mui/material/TextField';\nimport TimeMath from '../../../services/TimeMath'\n\nconst AdjustGroup = ({title, handleAddClick, handleSubClick, newLength, setNewLength}) => {\n    return (\n        <Box sx={\n            {display: 'flex', textAlign: 'center',flexDirection: 'column', mb: 2}\n        }>\n            <Typography>{title}</Typography>\n            <Box sx={{display: 'flex', alignItems: 'center'}}>\n                <TextField value={newLength} />\n                <ButtonGroup sx={{display: 'flex', flexDirection: 'column'}}>\n                    <IconButton onClick={() => {handleAddClick(newLength, setNewLength)}}> <AddIcon /> </IconButton>\n                    <IconButton onClick={() => {handleSubClick(newLength, setNewLength)}}> <RemoveIcon /> </IconButton>\n                </ButtonGroup>\n            </Box>\n        </Box>\n    )\n}\n\n// for now this breaks the progress bar which i have to fix\nconst TimerAdjust = ({pomodoro , setPomodoro, shortBreak, setShortBreak, longBreak, setLongBreak, setTimerSeconds}) => {\n    const [open, setOpen] = useState(false);\n    const [newPomodoroLength, setNewPomodoroLength] = useState(pomodoro);\n    const [newShortBreakLength, setNewShortBreakLength] = useState(shortBreak);\n    const [newLongBreakLength, setNewLongBreakLength] = useState(longBreak);\n\n    const handleClickOpen = () => {\n        setOpen(true)\n    }\n    const handleClose = () => {\n        setOpen(false)\n        setPomodoro(newPomodoroLength)\n        setShortBreak(newShortBreakLength)\n        setLongBreak(newLongBreakLength)\n        // future use probably find a way to find the currently active timer so it doesnt recent the timer if the user were to update it while they are on a break or something\n        setTimerSeconds(TimeMath.convMinSec(newPomodoroLength));\n    }\n    // setTimerSeconds(TimeMath.convMinSec(pomodoro));\n    const handleAddClick = (menuMinute, setMenuMinute) => {\n        setMenuMinute(menuMinute + 1)\n    }\n\n    const handleSubClick = (menuMinute, setMenuMinute) => {\n        if (menuMinute - 1 <= 1){\n            setMenuMinute(1);\n        } else {\n            setMenuMinute(menuMinute - 1)\n        }\n\n    }\n\nreturn(\n    <Box>\n        <IconButton onClick={handleClickOpen}>\n            <SettingsIcon />\n        </IconButton>\n\n        <Dialog open={open}>\n            <ClickAwayListener onClickAway={handleClose}>\n                <Box sx={{display: 'flex', flexDirection: 'column',margin: 5}}>\n                    <AdjustGroup title={'Pomodoro'} handleAddClick={handleAddClick} handleSubClick={handleSubClick} newLength={newPomodoroLength} setNewLength={setNewPomodoroLength}/>\n                    <AdjustGroup title={'Short Break'} handleAddClick={handleAddClick} handleSubClick={handleSubClick} newLength={newShortBreakLength} setNewLength={setNewShortBreakLength}/>\n                    <AdjustGroup title={'Long Break'} handleAddClick={handleAddClick} handleSubClick={handleSubClick} newLength={newLongBreakLength} setNewLength={setNewLongBreakLength}/>\n                </Box>\n            </ClickAwayListener>\n        </Dialog>\n    </Box>\n)\n}\n\nexport default TimerAdjust"]},"metadata":{},"sourceType":"module"}