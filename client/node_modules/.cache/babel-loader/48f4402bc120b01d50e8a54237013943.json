{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.protocol = exports.Transport = exports.Socket = exports.uServer = exports.parser = exports.attach = exports.listen = exports.transports = exports.Server = void 0;\n\nconst http_1 = require(\"http\");\n\nconst server_1 = require(\"./server\");\n\nObject.defineProperty(exports, \"Server\", {\n  enumerable: true,\n  get: function () {\n    return server_1.Server;\n  }\n});\n\nconst index_1 = require(\"./transports/index\");\n\nexports.transports = index_1.default;\n\nconst parser = require(\"engine.io-parser\");\n\nexports.parser = parser;\n\nvar userver_1 = require(\"./userver\");\n\nObject.defineProperty(exports, \"uServer\", {\n  enumerable: true,\n  get: function () {\n    return userver_1.uServer;\n  }\n});\n\nvar socket_1 = require(\"./socket\");\n\nObject.defineProperty(exports, \"Socket\", {\n  enumerable: true,\n  get: function () {\n    return socket_1.Socket;\n  }\n});\n\nvar transport_1 = require(\"./transport\");\n\nObject.defineProperty(exports, \"Transport\", {\n  enumerable: true,\n  get: function () {\n    return transport_1.Transport;\n  }\n});\nexports.protocol = parser.protocol;\n/**\n * Creates an http.Server exclusively used for WS upgrades.\n *\n * @param {Number} port\n * @param {Function} callback\n * @param {Object} options\n * @return {Server} websocket.io server\n * @api public\n */\n\nfunction listen(port, options, fn) {\n  if (\"function\" === typeof options) {\n    fn = options;\n    options = {};\n  }\n\n  const server = (0, http_1.createServer)(function (req, res) {\n    res.writeHead(501);\n    res.end(\"Not Implemented\");\n  }); // create engine server\n\n  const engine = attach(server, options);\n  engine.httpServer = server;\n  server.listen(port, fn);\n  return engine;\n}\n\nexports.listen = listen;\n/**\n * Captures upgrade requests for a http.Server.\n *\n * @param {http.Server} server\n * @param {Object} options\n * @return {Server} engine server\n * @api public\n */\n\nfunction attach(server, options) {\n  const engine = new server_1.Server(options);\n  engine.attach(server, options);\n  return engine;\n}\n\nexports.attach = attach;","map":{"version":3,"sources":["C:/Users/gabe/Desktop/Pomo/Team5/client/node_modules/engine.io/build/engine.io.js"],"names":["Object","defineProperty","exports","value","protocol","Transport","Socket","uServer","parser","attach","listen","transports","Server","http_1","require","server_1","enumerable","get","index_1","default","userver_1","socket_1","transport_1","port","options","fn","server","createServer","req","res","writeHead","end","engine","httpServer"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.protocol = exports.Transport = exports.Socket = exports.uServer = exports.parser = exports.attach = exports.listen = exports.transports = exports.Server = void 0;\nconst http_1 = require(\"http\");\nconst server_1 = require(\"./server\");\nObject.defineProperty(exports, \"Server\", { enumerable: true, get: function () { return server_1.Server; } });\nconst index_1 = require(\"./transports/index\");\nexports.transports = index_1.default;\nconst parser = require(\"engine.io-parser\");\nexports.parser = parser;\nvar userver_1 = require(\"./userver\");\nObject.defineProperty(exports, \"uServer\", { enumerable: true, get: function () { return userver_1.uServer; } });\nvar socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\nvar transport_1 = require(\"./transport\");\nObject.defineProperty(exports, \"Transport\", { enumerable: true, get: function () { return transport_1.Transport; } });\nexports.protocol = parser.protocol;\n/**\n * Creates an http.Server exclusively used for WS upgrades.\n *\n * @param {Number} port\n * @param {Function} callback\n * @param {Object} options\n * @return {Server} websocket.io server\n * @api public\n */\nfunction listen(port, options, fn) {\n    if (\"function\" === typeof options) {\n        fn = options;\n        options = {};\n    }\n    const server = (0, http_1.createServer)(function (req, res) {\n        res.writeHead(501);\n        res.end(\"Not Implemented\");\n    });\n    // create engine server\n    const engine = attach(server, options);\n    engine.httpServer = server;\n    server.listen(port, fn);\n    return engine;\n}\nexports.listen = listen;\n/**\n * Captures upgrade requests for a http.Server.\n *\n * @param {http.Server} server\n * @param {Object} options\n * @return {Server} engine server\n * @api public\n */\nfunction attach(server, options) {\n    const engine = new server_1.Server(options);\n    engine.attach(server, options);\n    return engine;\n}\nexports.attach = attach;\n"]},"metadata":{},"sourceType":"script"}