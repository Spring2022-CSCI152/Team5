{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juanc\\\\Downloads\\\\Pomo2.0MostRecent\\\\Team5-webPage_FriendChat\\\\client\\\\src\\\\components\\\\messenger\\\\Messenger.jsx\";\nimport React, { Component } from 'react';\nimport \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"../../components/conversations/Conversation\";\nimport Message from \"../../components/message/Message\";\nimport chatOnline from \"../../components/chatOnline/ChatOnline\";\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport { Text } from 'react-router-dom';\nimport Search from '../SearchBar/search';\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\"; //import { useContext } from \"react\";\n\nconst socket = io(\"ws://localhost:8900\");\nexport default function Messenger() {\n  const profile = JSON.parse(localStorage.getItem('profile'));\n  const userId = profile.result._id; //console.log(userId)\n\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]); //const [socket, setSocket] = useState(null)\n\n  const socket = useRef();\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [newMessage, setNewMessage] = useState(\"\"); //const { user } = useContext(AuthContext);\n\n  const scrollRef = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text\n      });\n    });\n  }, []);\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", userId);\n    socket.current.on(\"getUsers\", users => {\n      console.log(users);\n    });\n  }, [userId]); // console.log(socket)\n  // useEffect(() => {\n  //   socket.on(\"welcome\", (message) => {\n  //     console.log(message)\n  //   })\n  // }, [socket]);\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/v1/conversations/conversation/?userId=${userId}`).then(res => {\n      setConversations(conversations.concat(res.data));\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/v1/messages/message/', {\n      params: {\n        conversationId: currentChat === null || currentChat === void 0 ? void 0 : currentChat._id\n      }\n    }).then(response => {\n      setMessages(response.data);\n    });\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: userId,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n    const receiverId = currentChat.members.find(member => member !== userId);\n    socket.current.emit(\"sendMessage\", {\n      senderId: userId,\n      receiverId,\n      text: newMessage\n    });\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/v1/messages/message/', message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Topbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      \"font-family\": \"San Francisco\",\n      \"font-weight\": \"900\",\n      \"font-size\": \"50px\"\n    },\n    className: \"titleTop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }\n  }, \"Messages\"), /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 3\n    }\n  }, \" \\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500  Your Conversations  \\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messenger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMenuWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, conversations.map(c => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setCurrentChat(c),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Conversation, {\n    conversation: c,\n    currentUserId: userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Conversation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBoxWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, currentChat ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBoxTop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, messages.map(m => /*#__PURE__*/React.createElement(Message, {\n    message: m,\n    own: m.sender === userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBoxBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"chatMessageInput\",\n    placeholder: \"Chat with friend\",\n    onChange: e => setNewMessage(e.target.value),\n    value: newMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"chatSubmitButton\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"Send\"))) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"noConversationText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"Open a conversation to start a chat\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatOnline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatOnlineWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/juanc/Downloads/Pomo2.0MostRecent/Team5-webPage_FriendChat/client/src/components/messenger/Messenger.jsx"],"names":["React","Component","Topbar","Conversation","Message","chatOnline","useContext","useEffect","useRef","useState","Text","Search","axios","io","socket","Messenger","profile","JSON","parse","localStorage","getItem","userId","result","_id","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","arrivalMessage","setArrivalMessage","newMessage","setNewMessage","scrollRef","current","on","data","sender","senderId","text","members","includes","prev","emit","users","console","log","get","then","res","concat","params","conversationId","response","handleSubmit","e","preventDefault","message","receiverId","find","member","post","err","map","c","m","target","value"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\r\nimport \"./messenger.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from  \"../../components/conversations/Conversation\";\r\nimport Message from \"../../components/message/Message\";\r\nimport chatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport { Text } from 'react-router-dom';\r\nimport Search from '../SearchBar/search';\r\nimport axios from \"axios\";\r\nimport {io} from \"socket.io-client\"\r\n\r\n//import { useContext } from \"react\";\r\nconst socket = io(\"ws://localhost:8900\");\r\nexport default function Messenger()\r\n{\r\n  const profile = JSON.parse(localStorage.getItem('profile'))\r\n  const userId = profile.result._id\r\n  //console.log(userId)\r\n \r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  //const [socket, setSocket] = useState(null)\r\n  const socket = useRef();\r\nconst [arrivalMessage, setArrivalMessage] = useState(null)\r\n  const [newMessage, setNewMessage] =  useState(\"\");\r\n  //const { user } = useContext(AuthContext);\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n      socket.current = io(\"ws://localhost:8900\");\r\n      socket.current.on(\"getMessage\", data =>{\r\n        setArrivalMessage({\r\n          sender: data.senderId,\r\n          text: data.text,\r\n          \r\n        })\r\n      })\r\n  }, [] )\r\n\r\n  useEffect(() =>{\r\n    arrivalMessage && currentChat?.members.includes(arrivalMessage.sender) &&\r\n    setMessages((prev)=> [...prev,arrivalMessage])\r\n  }, [arrivalMessage, currentChat])\r\n useEffect(() => {\r\n   socket.current.emit(\"addUser\", userId);\r\n   socket.current.on(\"getUsers\", users =>{\r\n     console.log(users)\r\n   })\r\n }, [userId])\r\n // console.log(socket)\r\n  // useEffect(() => {\r\n  //   socket.on(\"welcome\", (message) => {\r\n  //     console.log(message)\r\n     \r\n  //   })\r\n  // }, [socket]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000/api/v1/conversations/conversation/?userId=${userId}`)\r\n        .then(res => {\r\n          setConversations(conversations.concat(res.data));\r\n        })\r\n      }, [])\r\n  \r\n\r\n    useEffect(() => {\r\n     axios.get('http://localhost:5000/api/v1/messages/message/', {\r\n        params: {\r\n          conversationId: currentChat?._id\r\n        }\r\n      }).then(response  => {\r\n     \r\n        setMessages(response.data)\r\n      })\r\n    }, [currentChat])\r\n  \r\n\r\n    const handleSubmit = async(e) => {\r\n      e.preventDefault();\r\n      const message = {\r\n        sender: userId,\r\n        text: newMessage,\r\n        conversationId: currentChat._id,\r\n      };\r\n      const receiverId = currentChat.members.find(\r\n        (member)=> member !== userId\r\n      );\r\n      socket.current.emit(\"sendMessage\", {\r\n        senderId: userId,\r\n        receiverId,\r\n        text: newMessage\r\n      })\r\n      try{\r\n        const res = await axios.post('http://localhost:5000/api/v1/messages/message/', message);\r\n        setMessages([...messages, res.data])\r\n        setNewMessage(\"\");\r\n      }catch(err){\r\n        console.log(err);\r\n      }\r\n    }\r\n    return (\r\n  <>\r\n  <Topbar />\r\n  <div  style={{\"font-family\": \"San Francisco\",\"font-weight\": \"900\",\"font-size\": \"50px\"}} className = \"titleTop\">Messages</div>\r\n  <Search />\r\n\r\n  <Text> ────────  Your Conversations  ────────</Text>\r\n  <div className=\"messenger\">\r\n    <div className=\"chatMenu\">\r\n      <div className=\"chatMenuWrapper\">\r\n        {conversations.map((c)=>(\r\n          <div onClick={()=> setCurrentChat(c)}>\r\n          <Conversation conversation={c} currentUserId={userId}/>\r\n          </div>\r\n        ))}\r\n        <Conversation/>\r\n      </div>\r\n    </div>\r\n    <div className=\"chatBox\">\r\n      <div className=\"chatBoxWrapper\">\r\n        {\r\n         currentChat ?\r\n        <>\r\n        <div className=\"chatBoxTop\">\r\n          {messages.map((m) =>(\r\n           \r\n              <Message message={m} own={m.sender === userId}/>\r\n          \r\n          ))}\r\n        \r\n        </div>\r\n        <div className=\"chatBoxBottom\">\r\n          <textarea \r\n            className=\"chatMessageInput\" \r\n            placeholder = \"Chat with friend\"\r\n            onChange={(e)=> setNewMessage(e.target.value)}\r\n            value = {newMessage}\r\n            ></textarea>\r\n          <button className=\"chatSubmitButton\"  onClick = {handleSubmit}>\r\n            Send\r\n            </button>\r\n        </div></> : <span className=\"noConversationText\">Open a conversation to start a chat</span>}\r\n      </div>\r\n    </div>\r\n    <div className=\"chatOnline\">\r\n      <div className=\"chatOnlineWrapper\"></div>\r\n    </div>\r\n  </div>\r\n  \r\n    \r\n  \r\n  \r\n  </>\r\n);\r\n}"]},"metadata":{},"sourceType":"module"}