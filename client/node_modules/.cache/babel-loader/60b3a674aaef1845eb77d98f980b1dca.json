{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/Desktop/WebDev/Team5/client/src/components/TimerPage/TimerDisplay/QuestDisplay.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport { addQuest, getQuests } from \"../../../services/ApiCalls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTaskHandler = _ref => {\n  _s();\n\n  let {\n    quests,\n    setQuests\n  } = _ref;\n  const [newQuest, setNewQuest] = useState(\"\");\n\n  const handleQuestChange = event => {\n    setNewQuest(event.target.value);\n  };\n\n  const handleQuestAdd = () => {\n    addQuest(newQuest).then(res => {\n      setQuests(quests.concat(res.data.task));\n      setNewQuest('');\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      mt: 1,\n      p: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"Enter new task\",\n      variant: \"outlined\",\n      onChange: handleQuestChange,\n      value: newQuest,\n      size: \"small\",\n      sx: {\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        alignItems: \"center\",\n        ml: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        onClick: handleQuestAdd,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTaskHandler, \"+M8QyLTfsRufkRJfnXZ9BH61zdc=\");\n\n_c = NewTaskHandler;\n\nconst QuestDisplay = _ref2 => {\n  _s2();\n\n  let {\n    setActiveTask\n  } = _ref2;\n  const [quests, setQuests] = useState([]);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const handleClick = quest => {\n    setSelectedIndex(quest._id);\n    setActiveTask(quest.name);\n  };\n\n  useEffect(() => {\n    getQuests().then(initialQuests => {\n      if (initialQuests.data.tasks.length !== 0) {\n        setQuests(initialQuests.data.tasks);\n        setSelectedIndex(initialQuests.data.tasks[0]._id);\n        setActiveTask(initialQuests.data.tasks[0].name);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        maxHeight: 105,\n        overflow: 'auto',\n        mt: 5\n      },\n      children: quests.map(quest => /*#__PURE__*/_jsxDEV(ListItemButton, {\n        selected: selectedIndex === quest._id,\n        onClick: () => handleClick(quest),\n        children: [\" \", quest.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NewTaskHandler, {\n      setQuests: setQuests,\n      quests: quests\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(QuestDisplay, \"jCJk84SvyDORhQPIOSUDqSP07Qw=\");\n\n_c2 = QuestDisplay;\nexport default QuestDisplay;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewTaskHandler\");\n$RefreshReg$(_c2, \"QuestDisplay\");","map":{"version":3,"sources":["/Users/johnny/Desktop/WebDev/Team5/client/src/components/TimerPage/TimerDisplay/QuestDisplay.js"],"names":["React","useState","useEffect","List","ListItemButton","Button","TextField","Box","addQuest","getQuests","NewTaskHandler","quests","setQuests","newQuest","setNewQuest","handleQuestChange","event","target","value","handleQuestAdd","then","res","concat","data","task","catch","err","console","log","display","mt","p","width","alignItems","ml","QuestDisplay","setActiveTask","selectedIndex","setSelectedIndex","handleClick","quest","_id","name","initialQuests","tasks","length","maxHeight","overflow","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport {addQuest, getQuests} from \"../../../services/ApiCalls\";\n\nconst NewTaskHandler = ({quests, setQuests}) => {\n    const [newQuest, setNewQuest] = useState(\"\")\n\n    const handleQuestChange = (event) => {\n        setNewQuest(event.target.value)\n    }\n\n    const handleQuestAdd = () => {\n        addQuest(newQuest)\n            .then(res => {\n                setQuests(quests.concat(res.data.task))\n                setNewQuest('')\n                })\n            .catch(err => console.log(err))\n    }\n\nreturn (\n    <Box sx={{display: \"flex\", mt: 1, p: 1}}>\n        <TextField id=\"outlined-basic\" label=\"Enter new task\" variant=\"outlined\" onChange={handleQuestChange} value={newQuest} size=\"small\" sx={{width: \"100%\"}} />\n        <Box sx={{display: \"flex\", alignItems: \"center\", ml: 2}}>\n            <Button variant={\"contained\"} size={\"small\"} onClick={handleQuestAdd}>+</Button>\n        </Box>\n    </Box>\n)\n}\n\nconst QuestDisplay = ({setActiveTask}) => {\n    const [quests, setQuests] = useState([])\n    const [selectedIndex, setSelectedIndex] = useState(0)\n\n    const handleClick = (quest) => {\n        setSelectedIndex(quest._id)\n        setActiveTask(quest.name)\n    }\n\n    useEffect(() => {\n        getQuests()\n            .then(initialQuests => {\n                if (initialQuests.data.tasks.length !== 0){\n                    setQuests(initialQuests.data.tasks)\n                    setSelectedIndex(initialQuests.data.tasks[0]._id)\n                    setActiveTask(initialQuests.data.tasks[0].name)\n                }\n            })\n    }, [])\n\n    return (\n        <Box>\n            <List sx={{maxHeight: 105, overflow: 'auto', mt: 5}}>\n                {quests.map(quest =>\n                    <ListItemButton selected={selectedIndex === quest._id} onClick={() => handleClick(quest)}> {quest.name} </ListItemButton>\n                )}\n            </List>\n            <NewTaskHandler setQuests={setQuests} quests={quests}/>\n        </Box>\n\n    )\n}\n\nexport default QuestDisplay"]},"metadata":{},"sourceType":"module"}