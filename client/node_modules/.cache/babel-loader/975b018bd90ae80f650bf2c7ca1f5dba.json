{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juanc\\\\Desktop\\\\Pomo 2.0\\\\PomoKingdom2.0\\\\client\\\\src\\\\components\\\\FriendsContainer.js\\\\FriendsList.js\";\nimport React, { useState } from 'react';\nimport { ChannelList, useChatContext } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\nconst SideBar = _ref => {\n  let {\n    logout\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__sidebar__icon1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon1__inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: HospitalIcon,\n    alt: \"Hospital\",\n    width: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__sidebar__icon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon1__inner\",\n    onClick: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: LogoutIcon,\n    alt: \"Logout\",\n    width: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }))));\n};\n\nconst CompanyHeader = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"channel-list__header\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: \"channel-list__header__text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }\n}, \"Medical Pager\"));\n\nconst customChannelTeamFilter = channels => {\n  return channels.filter(channel => channel.type === 'team');\n};\n\nconst customChannelMessagingFilter = channels => {\n  return channels.filter(channel => channel.type === 'messaging');\n};\n\nconst ChannelListContent = _ref2 => {\n  let {\n    isCreating,\n    setIsCreating,\n    setCreateType,\n    setIsEditing,\n    setToggleContainer\n  } = _ref2;\n  const {\n    client\n  } = useChatContext();\n\n  const logout = () => {\n    cookies.remove(\"token\");\n    cookies.remove('userId');\n    cookies.remove('username');\n    cookies.remove('fullName');\n    cookies.remove('avatarURL');\n    cookies.remove('hashedPassword');\n    cookies.remove('phoneNumber');\n    window.location.reload();\n  };\n\n  const filters = {\n    members: {\n      $in: [client.userID]\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SideBar, {\n    logout: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__list__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CompanyHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ChannelSearch, {\n    setToggleContainer: setToggleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ChannelList, {\n    filters: filters,\n    channelRenderFilterFn: customChannelTeamFilter,\n    List: listProps => /*#__PURE__*/React.createElement(TeamChannelList, Object.assign({}, listProps, {\n      type: \"team\",\n      isCreating: isCreating,\n      setIsCreating: setIsCreating,\n      setCreateType: setCreateType,\n      setIsEditing: setIsEditing,\n      setToggleContainer: setToggleContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    })),\n    Preview: previewProps => /*#__PURE__*/React.createElement(TeamChannelPreview, Object.assign({}, previewProps, {\n      setIsCreating: setIsCreating,\n      setIsEditing: setIsEditing,\n      setToggleContainer: setToggleContainer,\n      type: \"team\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ChannelList, {\n    filters: filters,\n    channelRenderFilterFn: customChannelMessagingFilter,\n    List: listProps => /*#__PURE__*/React.createElement(TeamChannelList, Object.assign({}, listProps, {\n      type: \"messaging\",\n      isCreating: isCreating,\n      setIsCreating: setIsCreating,\n      setCreateType: setCreateType,\n      setIsEditing: setIsEditing,\n      setToggleContainer: setToggleContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    })),\n    Preview: previewProps => /*#__PURE__*/React.createElement(TeamChannelPreview, Object.assign({}, previewProps, {\n      setIsCreating: setIsCreating,\n      setIsEditing: setIsEditing,\n      setToggleContainer: setToggleContainer,\n      type: \"messaging\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst ChannelListContainer = _ref3 => {\n  let {\n    setCreateType,\n    setIsCreating,\n    setIsEditing\n  } = _ref3;\n  const [toggleContainer, setToggleContainer] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChannelListContent, {\n    setIsCreating: setIsCreating,\n    setCreateType: setCreateType,\n    setIsEditing: setIsEditing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__container-responsive\",\n    style: {\n      left: toggleContainer ? \"0%\" : \"-89%\",\n      backgroundColor: \"#005fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__container-toggle\",\n    onClick: () => setToggleContainer(prevToggleContainer => !prevToggleContainer),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ChannelListContent, {\n    setIsCreating: setIsCreating,\n    setCreateType: setCreateType,\n    setIsEditing: setIsEditing,\n    setToggleContainer: setToggleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default ChannelListContainer;","map":{"version":3,"sources":["C:/Users/juanc/Desktop/Pomo 2.0/PomoKingdom2.0/client/src/components/FriendsContainer.js/FriendsList.js"],"names":["React","useState","ChannelList","useChatContext","Cookies","cookies","SideBar","logout","HospitalIcon","LogoutIcon","CompanyHeader","customChannelTeamFilter","channels","filter","channel","type","customChannelMessagingFilter","ChannelListContent","isCreating","setIsCreating","setCreateType","setIsEditing","setToggleContainer","client","remove","window","location","reload","filters","members","$in","userID","listProps","previewProps","ChannelListContainer","toggleContainer","left","backgroundColor","prevToggleContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,mBAA5C;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;;AAEA,MAAME,OAAO,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBACZ;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEC,YAAV;AAAwB,IAAA,GAAG,EAAC,UAA5B;AAAuC,IAAA,KAAK,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,OAAO,EAAED,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEE,UAAV;AAAsB,IAAA,GAAG,EAAC,QAA1B;AAAmC,IAAA,KAAK,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CANJ,CADY;AAAA,CAAhB;;AAeA,MAAMC,aAAa,GAAG,mBAClB;AAAK,EAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAG,EAAA,SAAS,EAAC,4BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ;;AAMA,MAAMC,uBAAuB,GAAIC,QAAD,IAAc;AAC1C,SAAOA,QAAQ,CAACC,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACC,IAAR,KAAiB,MAA9C,CAAP;AACH,CAFD;;AAIA,MAAMC,4BAA4B,GAAIJ,QAAD,IAAc;AAC/C,SAAOA,QAAQ,CAACC,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACC,IAAR,KAAiB,WAA9C,CAAP;AACH,CAFD;;AAIA,MAAME,kBAAkB,GAAG,SAAoF;AAAA,MAAnF;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA,aAA7B;AAA4CC,IAAAA,YAA5C;AAA0DC,IAAAA;AAA1D,GAAmF;AAC3G,QAAM;AAAEC,IAAAA;AAAF,MAAapB,cAAc,EAAjC;;AAEA,QAAMI,MAAM,GAAG,MAAM;AACjBF,IAAAA,OAAO,CAACmB,MAAR,CAAe,OAAf;AACAnB,IAAAA,OAAO,CAACmB,MAAR,CAAe,QAAf;AACAnB,IAAAA,OAAO,CAACmB,MAAR,CAAe,UAAf;AACAnB,IAAAA,OAAO,CAACmB,MAAR,CAAe,UAAf;AACAnB,IAAAA,OAAO,CAACmB,MAAR,CAAe,WAAf;AACAnB,IAAAA,OAAO,CAACmB,MAAR,CAAe,gBAAf;AACAnB,IAAAA,OAAO,CAACmB,MAAR,CAAe,aAAf;AAEAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,GAVD;;AAYA,QAAMC,OAAO,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,GAAG,EAAE,CAACP,MAAM,CAACQ,MAAR;AAAP;AAAX,GAAhB;AAEA,sBACI,uDACI,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAExB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,aAAD;AAAe,IAAA,kBAAkB,EAAEe,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,WAAD;AACI,IAAA,OAAO,EAAEM,OADb;AAEI,IAAA,qBAAqB,EAAEjB,uBAF3B;AAGI,IAAA,IAAI,EAAGqB,SAAD,iBACF,oBAAC,eAAD,oBACQA,SADR;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,UAAU,EAAEd,UAHhB;AAII,MAAA,aAAa,EAAEC,aAJnB;AAKI,MAAA,aAAa,EAAEC,aALnB;AAMI,MAAA,YAAY,EAAEC,YANlB;AAOI,MAAA,kBAAkB,EAAEC,kBAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJR;AAcI,IAAA,OAAO,EAAGW,YAAD,iBACL,oBAAC,kBAAD,oBACQA,YADR;AAEI,MAAA,aAAa,EAAEd,aAFnB;AAGI,MAAA,YAAY,EAAEE,YAHlB;AAII,MAAA,kBAAkB,EAAEC,kBAJxB;AAKI,MAAA,IAAI,EAAC,MALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eA2BI,oBAAC,WAAD;AACI,IAAA,OAAO,EAAEM,OADb;AAEI,IAAA,qBAAqB,EAAEZ,4BAF3B;AAGI,IAAA,IAAI,EAAGgB,SAAD,iBACF,oBAAC,eAAD,oBACQA,SADR;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,UAAU,EAAEd,UAHhB;AAII,MAAA,aAAa,EAAEC,aAJnB;AAKI,MAAA,aAAa,EAAEC,aALnB;AAMI,MAAA,YAAY,EAAEC,YANlB;AAOI,MAAA,kBAAkB,EAAEC,kBAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJR;AAcI,IAAA,OAAO,EAAGW,YAAD,iBACL,oBAAC,kBAAD,oBACQA,YADR;AAEI,MAAA,aAAa,EAAEd,aAFnB;AAGI,MAAA,YAAY,EAAEE,YAHlB;AAII,MAAA,kBAAkB,EAAEC,kBAJxB;AAKI,MAAA,IAAI,EAAC,WALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,CAFJ,CADJ;AAyDH,CA1ED;;AA4EA,MAAMY,oBAAoB,GAAG,SAAoD;AAAA,MAAnD;AAAEd,IAAAA,aAAF;AAAiBD,IAAAA,aAAjB;AAAgCE,IAAAA;AAAhC,GAAmD;AAC7E,QAAM,CAACc,eAAD,EAAkBb,kBAAlB,IAAwCrB,QAAQ,CAAC,KAAD,CAAtD;AAEA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AACE,IAAA,aAAa,EAAEkB,aADjB;AAEE,IAAA,aAAa,EAAEC,aAFjB;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADJ,eASI;AAAK,IAAA,SAAS,EAAC,oCAAf;AACI,IAAA,KAAK,EAAE;AAAEe,MAAAA,IAAI,EAAED,eAAe,GAAG,IAAH,GAAU,MAAjC;AAAyCE,MAAAA,eAAe,EAAE;AAA1D,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAgD,IAAA,OAAO,EAAE,MAAMf,kBAAkB,CAAEgB,mBAAD,IAAyB,CAACA,mBAA3B,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAKI,oBAAC,kBAAD;AACA,IAAA,aAAa,EAAEnB,aADf;AAEA,IAAA,aAAa,EAAEC,aAFf;AAGA,IAAA,YAAY,EAAEC,YAHd;AAIA,IAAA,kBAAkB,EAAEC,kBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CATJ,CADJ;AAyBH,CA5BD;;AA8BA,eAAeY,oBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { ChannelList, useChatContext } from 'stream-chat-react';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst SideBar = ({ logout }) => (\r\n    <div className=\"channel-list__sidebar\">\r\n        <div className=\"channel-list__sidebar__icon1\">\r\n            <div className=\"icon1__inner\">\r\n                <img src={HospitalIcon} alt=\"Hospital\" width=\"30\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"channel-list__sidebar__icon2\">\r\n            <div className=\"icon1__inner\" onClick={logout}>\r\n                <img src={LogoutIcon} alt=\"Logout\" width=\"30\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst CompanyHeader = () => (\r\n    <div className=\"channel-list__header\">\r\n        <p className=\"channel-list__header__text\">Medical Pager</p>\r\n    </div>\r\n)\r\n\r\nconst customChannelTeamFilter = (channels) => {\r\n    return channels.filter((channel) => channel.type === 'team');\r\n}\r\n\r\nconst customChannelMessagingFilter = (channels) => {\r\n    return channels.filter((channel) => channel.type === 'messaging');\r\n}\r\n\r\nconst ChannelListContent = ({ isCreating, setIsCreating, setCreateType, setIsEditing, setToggleContainer }) => {\r\n    const { client } = useChatContext();\r\n\r\n    const logout = () => {\r\n        cookies.remove(\"token\");\r\n        cookies.remove('userId');\r\n        cookies.remove('username');\r\n        cookies.remove('fullName');\r\n        cookies.remove('avatarURL');\r\n        cookies.remove('hashedPassword');\r\n        cookies.remove('phoneNumber');\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    const filters = { members: { $in: [client.userID] } };\r\n\r\n    return (\r\n        <>\r\n            <SideBar logout={logout} />\r\n            <div className=\"channel-list__list__wrapper\">\r\n                <CompanyHeader />\r\n                <ChannelSearch setToggleContainer={setToggleContainer} />\r\n                <ChannelList \r\n                    filters={filters}\r\n                    channelRenderFilterFn={customChannelTeamFilter}\r\n                    List={(listProps) => (\r\n                        <TeamChannelList \r\n                            {...listProps}\r\n                            type=\"team\"\r\n                            isCreating={isCreating}\r\n                            setIsCreating={setIsCreating}\r\n                            setCreateType={setCreateType} \r\n                            setIsEditing={setIsEditing}\r\n                            setToggleContainer={setToggleContainer}\r\n                        />\r\n                    )}\r\n                    Preview={(previewProps) => (\r\n                        <TeamChannelPreview \r\n                            {...previewProps}\r\n                            setIsCreating={setIsCreating}\r\n                            setIsEditing={setIsEditing}\r\n                            setToggleContainer={setToggleContainer}\r\n                            type=\"team\"\r\n                        />\r\n                    )}\r\n                />\r\n                <ChannelList \r\n                    filters={filters}\r\n                    channelRenderFilterFn={customChannelMessagingFilter}\r\n                    List={(listProps) => (\r\n                        <TeamChannelList \r\n                            {...listProps}\r\n                            type=\"messaging\"\r\n                            isCreating={isCreating}\r\n                            setIsCreating={setIsCreating}\r\n                            setCreateType={setCreateType} \r\n                            setIsEditing={setIsEditing}\r\n                            setToggleContainer={setToggleContainer}\r\n                        />\r\n                    )}\r\n                    Preview={(previewProps) => (\r\n                        <TeamChannelPreview \r\n                            {...previewProps}\r\n                            setIsCreating={setIsCreating}\r\n                            setIsEditing={setIsEditing}\r\n                            setToggleContainer={setToggleContainer}\r\n                            type=\"messaging\"\r\n                        />\r\n                    )}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelListContainer = ({ setCreateType, setIsCreating, setIsEditing }) => {\r\n    const [toggleContainer, setToggleContainer] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"channel-list__container\">\r\n              <ChannelListContent \r\n                setIsCreating={setIsCreating} \r\n                setCreateType={setCreateType} \r\n                setIsEditing={setIsEditing} \r\n              />\r\n            </div>\r\n\r\n            <div className=\"channel-list__container-responsive\"\r\n                style={{ left: toggleContainer ? \"0%\" : \"-89%\", backgroundColor: \"#005fff\"}}\r\n            >\r\n                <div className=\"channel-list__container-toggle\" onClick={() => setToggleContainer((prevToggleContainer) => !prevToggleContainer)}>\r\n                </div>\r\n                <ChannelListContent \r\n                setIsCreating={setIsCreating} \r\n                setCreateType={setCreateType} \r\n                setIsEditing={setIsEditing}\r\n                setToggleContainer={setToggleContainer}\r\n              />\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ChannelListContainer;"]},"metadata":{},"sourceType":"module"}