{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juanc\\\\Desktop\\\\Pomo 2.0_V2\\\\Team5-55b01a0a991b27ce3a0be7ca18bfc9e31c8f4882\\\\client\\\\src\\\\components\\\\messenger\\\\Messenger.jsx\";\nimport React, { Component } from 'react';\nimport \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"../../components/conversations/Conversation\";\nimport Message from \"../../components/message/Message\";\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\nimport { useContext, useEffect, useRef, useState } from \"react\"; //import { AuthContext } from \"../../context/AuthContext\";\n\nimport axios from \"axios\"; //import { io } from \"socket.io-client\";\n\nexport default function Messenger() {\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const socket = useRef(); //const { user } = useContext(AuthContext);\n\n  const scrollRef = useRef();\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, []);\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]); // useEffect(() => {\n  //   //socket.current.emit(\"addUser\", user._id);\n  //   //socket.current.on(\"getUsers\", (users) => {\n  //     setOnlineUsers(\n  //       user.followings.filter((f) => users.some((u) => u.userId === f))\n  //     );\n  //   });\n  // }, [user]);\n  // useEffect(() => {\n  //   const getConversations = async () => {\n  //     try {\n  //       const res = await axios.get(\"/conversations/\" + user._id);\n  //       setConversations(res.data);\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n  //getConversations();\n  //}, [user._id]);\n\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      //sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n    const receiverId = currentChat.members.find();\n    socket.current.emit(\"sendMessage\", {\n      //senderId: user._id,\n      receiverId,\n      text: newMessage\n    });\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  }; //   useEffect(() => {scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  //   }, [messages]);\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Topbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messenger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMenuWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Search for friends\",\n    className: \"chatMenuInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), conversations.map(c => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setCurrentChat(c),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBoxWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, currentChat ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBoxTop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, messages.map(m => /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBoxBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"chatMessageInput\",\n    placeholder: \"write something...\",\n    onChange: e => setNewMessage(e.target.value),\n    value: newMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"chatSubmitButton\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, \"Send\"))) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"noConversationText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, \"Open a conversation to start a chat.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatOnline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatOnlineWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChatOnline, {\n    onlineUsers: onlineUsers //currentId={user._id}\n    ,\n    setCurrentChat: setCurrentChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/juanc/Desktop/Pomo 2.0_V2/Team5-55b01a0a991b27ce3a0be7ca18bfc9e31c8f4882/client/src/components/messenger/Messenger.jsx"],"names":["React","Component","Topbar","Conversation","Message","ChatOnline","useContext","useEffect","useRef","useState","axios","Messenger","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","onlineUsers","setOnlineUsers","socket","scrollRef","current","io","on","data","sender","senderId","text","createdAt","Date","now","members","includes","prev","getMessages","res","get","_id","err","console","log","handleSubmit","e","preventDefault","message","conversationId","receiverId","find","emit","post","map","c","m","target","value"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\r\nimport \"./messenger.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from \"../../components/conversations/Conversation\";\r\nimport Message from \"../../components/message/Message\";\r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\n//import { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\n//import { io } from \"socket.io-client\";\r\n\r\nexport default function Messenger() {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const socket = useRef();\r\n  //const { user } = useContext(AuthContext);\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socket.current = io(\"ws://localhost:8900\");\r\n    socket.current.on(\"getMessage\", (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentChat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentChat]);\r\n\r\n  // useEffect(() => {\r\n  //   //socket.current.emit(\"addUser\", user._id);\r\n  //   //socket.current.on(\"getUsers\", (users) => {\r\n  //     setOnlineUsers(\r\n  //       user.followings.filter((f) => users.some((u) => u.userId === f))\r\n  //     );\r\n  //   });\r\n  // }, [user]);\r\n\r\n  // useEffect(() => {\r\n  //   const getConversations = async () => {\r\n  //     try {\r\n  //       const res = await axios.get(\"/conversations/\" + user._id);\r\n  //       setConversations(res.data);\r\n  //     } catch (err) {\r\n  //       console.log(err);\r\n  //     }\r\n  //   };\r\n    //getConversations();\r\n  //}, [user._id]);\r\n\r\n  useEffect(() => {\r\n    const getMessages = async () => {\r\n      try {\r\n        const res = await axios.get(\"/messages/\" + currentChat?._id);\r\n        setMessages(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getMessages();\r\n  }, [currentChat]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const message = {\r\n      //sender: user._id,\r\n      text: newMessage,\r\n      conversationId: currentChat._id,\r\n    };\r\n\r\n    const receiverId = currentChat.members.find(\r\n     // (member) => member !== user._id\r\n    );\r\n\r\n    socket.current.emit(\"sendMessage\", {\r\n      //senderId: user._id,\r\n      receiverId,\r\n      text: newMessage,\r\n    });\r\n\r\n    try {\r\n      const res = await axios.post(\"/messages\", message);\r\n      setMessages([...messages, res.data]);\r\n      setNewMessage(\"\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n//   useEffect(() => {scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n//   }, [messages]);\r\n\r\n  return (<>\r\n      <Topbar />\r\n      <div className=\"messenger\">\r\n        <div className=\"chatMenu\">\r\n          <div className=\"chatMenuWrapper\">\r\n            <input placeholder=\"Search for friends\" className=\"chatMenuInput\" />\r\n            {conversations.map((c) => (\r\n              <div onClick={() => setCurrentChat(c)}>\r\n               {/* <Conversation conversation={c} currentUser={user} /> */}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"chatBox\">\r\n          <div className=\"chatBoxWrapper\">\r\n            {currentChat ? (\r\n              <>\r\n                <div className=\"chatBoxTop\">\r\n                  {messages.map((m) => (\r\n                    <div ref={scrollRef}>\r\n                      {/* <Message message={m} own={m.sender === user._id} /> */}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"chatBoxBottom\">\r\n                  <textarea\r\n                    className=\"chatMessageInput\"\r\n                    placeholder=\"write something...\"\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    value={newMessage}\r\n                  ></textarea>\r\n                  <button className=\"chatSubmitButton\" onClick={handleSubmit}>\r\n                    Send\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <span className=\"noConversationText\">\r\n                Open a conversation to start a chat.\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"chatOnline\">\r\n          <div className=\"chatOnlineWrapper\">\r\n            <ChatOnline\r\n              onlineUsers={onlineUsers}\r\n              //currentId={user._id}\r\n              setCurrentChat={setCurrentChat}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}