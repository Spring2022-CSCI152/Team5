{"ast":null,"code":"/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function () {\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\n  if (this.jitter) {\n    var rand = Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n  }\n\n  return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\n\nBackoff.prototype.reset = function () {\n  this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMin = function (min) {\n  this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMax = function (max) {\n  this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\n\n\nBackoff.prototype.setJitter = function (jitter) {\n  this.jitter = jitter;\n};","map":{"version":3,"sources":["C:/Users/gabe/Desktop/Pomo/Team5/client/node_modules/socket.io-client/build/esm/contrib/backo2.js"],"names":["Backoff","opts","ms","min","max","factor","jitter","attempts","prototype","duration","Math","pow","rand","random","deviation","floor","reset","setMin","setMax","setJitter"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AAC1BA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACA,OAAKC,EAAL,GAAUD,IAAI,CAACE,GAAL,IAAY,GAAtB;AACA,OAAKC,GAAL,GAAWH,IAAI,CAACG,GAAL,IAAY,KAAvB;AACA,OAAKC,MAAL,GAAcJ,IAAI,CAACI,MAAL,IAAe,CAA7B;AACA,OAAKC,MAAL,GAAcL,IAAI,CAACK,MAAL,GAAc,CAAd,IAAmBL,IAAI,CAACK,MAAL,IAAe,CAAlC,GAAsCL,IAAI,CAACK,MAA3C,GAAoD,CAAlE;AACA,OAAKC,QAAL,GAAgB,CAAhB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;AACAP,OAAO,CAACQ,SAAR,CAAkBC,QAAlB,GAA6B,YAAY;AACrC,MAAIP,EAAE,GAAG,KAAKA,EAAL,GAAUQ,IAAI,CAACC,GAAL,CAAS,KAAKN,MAAd,EAAsB,KAAKE,QAAL,EAAtB,CAAnB;;AACA,MAAI,KAAKD,MAAT,EAAiB;AACb,QAAIM,IAAI,GAAGF,IAAI,CAACG,MAAL,EAAX;AACA,QAAIC,SAAS,GAAGJ,IAAI,CAACK,KAAL,CAAWH,IAAI,GAAG,KAAKN,MAAZ,GAAqBJ,EAAhC,CAAhB;AACAA,IAAAA,EAAE,GAAG,CAACQ,IAAI,CAACK,KAAL,CAAWH,IAAI,GAAG,EAAlB,IAAwB,CAAzB,KAA+B,CAA/B,GAAmCV,EAAE,GAAGY,SAAxC,GAAoDZ,EAAE,GAAGY,SAA9D;AACH;;AACD,SAAOJ,IAAI,CAACP,GAAL,CAASD,EAAT,EAAa,KAAKE,GAAlB,IAAyB,CAAhC;AACH,CARD;AASA;AACA;AACA;AACA;AACA;;;AACAJ,OAAO,CAACQ,SAAR,CAAkBQ,KAAlB,GAA0B,YAAY;AAClC,OAAKT,QAAL,GAAgB,CAAhB;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;;;AACAP,OAAO,CAACQ,SAAR,CAAkBS,MAAlB,GAA2B,UAAUd,GAAV,EAAe;AACtC,OAAKD,EAAL,GAAUC,GAAV;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;;;AACAH,OAAO,CAACQ,SAAR,CAAkBU,MAAlB,GAA2B,UAAUd,GAAV,EAAe;AACtC,OAAKA,GAAL,GAAWA,GAAX;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;;;AACAJ,OAAO,CAACQ,SAAR,CAAkBW,SAAlB,GAA8B,UAAUb,MAAV,EAAkB;AAC5C,OAAKA,MAAL,GAAcA,MAAd;AACH,CAFD","sourcesContent":["/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n"]},"metadata":{},"sourceType":"module"}