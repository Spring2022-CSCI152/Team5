{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabe\\\\Desktop\\\\Pomo\\\\Team5\\\\client\\\\src\\\\components\\\\chatOnline\\\\ChatOnline.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./chatOnline.css\";\nexport default function ChatOnline(_ref) {\n  let {\n    onlineUsers,\n    currentId,\n    setCurrentChat\n  } = _ref;\n  const profile = JSON.parse(localStorage.getItem('profile'));\n  const userId = profile.result._id;\n  const [friends, setFriends] = useState([]);\n  const [onlineFriends, setOnlineFriends] = useState([]);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  useEffect(() => {\n    const getFriends = async () => {\n      const res = await axios.get(\"/users/friends/\" + userId);\n      setFriends(res.data);\n    };\n\n    getFriends();\n  }, [currentId]);\n  useEffect(() => {\n    setOnlineFriends(friends.filter(f => onlineUsers.includes(f._id)));\n  }, [friends, onlineUsers]);\n\n  const handleClick = async user => {\n    try {\n      const res = await axios.get(`/conversations/find/${currentId}/${userId}`);\n      setCurrentChat(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatOnline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, onlineFriends.map(o => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatOnlineFriend\",\n    onClick: () => handleClick(o),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatOnlineImgContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"chatOnlineImg\",\n    src: (o === null || o === void 0 ? void 0 : o.profilePicture) ? PF + o.profilePicture : PF + \"person/noAvatar.png\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatOnlineBadge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"chatOnlineName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, o === null || o === void 0 ? void 0 : o.username))));\n}","map":{"version":3,"sources":["C:/Users/gabe/Desktop/Pomo/Team5/client/src/components/chatOnline/ChatOnline.jsx"],"names":["React","Component","axios","useEffect","useState","ChatOnline","onlineUsers","currentId","setCurrentChat","profile","JSON","parse","localStorage","getItem","userId","result","_id","friends","setFriends","onlineFriends","setOnlineFriends","PF","process","env","REACT_APP_PUBLIC_FOLDER","getFriends","res","get","data","filter","f","includes","handleClick","user","err","console","log","map","o","profilePicture","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,kBAAP;AAEA,eAAe,SAASC,UAAT,OAAgE;AAAA,MAA5C;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,GAA4C;AAC7E,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAhB;AACA,QAAMC,MAAM,GAAGL,OAAO,CAACM,MAAR,CAAeC,GAA9B;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMiB,EAAE,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAvB;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,UAAU,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAU,oBAAoBb,MAA9B,CAAlB;AACAI,MAAAA,UAAU,CAACQ,GAAG,CAACE,IAAL,CAAV;AACD,KAHD;;AAKAH,IAAAA,UAAU;AACX,GAPQ,EAON,CAAClB,SAAD,CAPM,CAAT;AASAJ,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,gBAAgB,CAACH,OAAO,CAACY,MAAR,CAAgBC,CAAD,IAAOxB,WAAW,CAACyB,QAAZ,CAAqBD,CAAC,CAACd,GAAvB,CAAtB,CAAD,CAAhB;AACD,GAFQ,EAEN,CAACC,OAAD,EAAUX,WAAV,CAFM,CAAT;;AAIA,QAAM0B,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAClC,QAAI;AACF,YAAMP,GAAG,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CACf,uBAAsBpB,SAAU,IAAGO,MAAO,EAD3B,CAAlB;AAGAN,MAAAA,cAAc,CAACkB,GAAG,CAACE,IAAL,CAAd;AACD,KALD,CAKE,OAAOM,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,aAAa,CAACkB,GAAd,CAAmBC,CAAD,iBACjB;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,OAAO,EAAE,MAAMN,WAAW,CAACM,CAAD,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,GAAG,EACD,CAAAA,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEC,cAAH,IACIlB,EAAE,GAAGiB,CAAC,CAACC,cADX,GAEIlB,EAAE,GAAG,qBALb;AAOE,IAAA,GAAG,EAAC,EAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,eAaE;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCiB,CAAlC,aAAkCA,CAAlC,uBAAkCA,CAAC,CAAEE,QAArC,CAbF,CADD,CADH,CADF;AAqBD","sourcesContent":["import React, { Component }  from 'react';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./chatOnline.css\";\r\n\r\nexport default function ChatOnline({ onlineUsers, currentId, setCurrentChat }) {\r\n  const profile = JSON.parse(localStorage.getItem('profile'));\r\n  const userId = profile.result._id;\r\n  \r\n  const [friends, setFriends] = useState([]);\r\n  const [onlineFriends, setOnlineFriends] = useState([]);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  useEffect(() => {\r\n    const getFriends = async () => {\r\n      const res = await axios.get(\"/users/friends/\" + userId);\r\n      setFriends(res.data);\r\n    };\r\n\r\n    getFriends();\r\n  }, [currentId]);\r\n\r\n  useEffect(() => {\r\n    setOnlineFriends(friends.filter((f) => onlineUsers.includes(f._id)));\r\n  }, [friends, onlineUsers]);\r\n\r\n  const handleClick = async (user) => {\r\n    try {\r\n      const res = await axios.get(\r\n        `/conversations/find/${currentId}/${userId}`\r\n      );\r\n      setCurrentChat(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatOnline\">\r\n      {onlineFriends.map((o) => (\r\n        <div className=\"chatOnlineFriend\" onClick={() => handleClick(o)}>\r\n          <div className=\"chatOnlineImgContainer\">\r\n            <img\r\n              className=\"chatOnlineImg\"\r\n              src={\r\n                o?.profilePicture\r\n                  ? PF + o.profilePicture\r\n                  : PF + \"person/noAvatar.png\"\r\n              }\r\n              alt=\"\"\r\n            />\r\n            <div className=\"chatOnlineBadge\"></div>\r\n          </div>\r\n          <span className=\"chatOnlineName\">{o?.username}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}