{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabe\\\\Desktop\\\\Pomo\\\\Team5\\\\client\\\\src\\\\components\\\\messenger\\\\Messenger.jsx\";\nimport React, { Component } from 'react';\nimport \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"../../components/conversations/Conversation\";\nimport Message from \"../../components/message/Message\";\nimport chatOnline from \"../../components/chatOnline/ChatOnline\";\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport axios from \"axios\"; //import { useContext } from \"react\";\n\nexport default function Messenger() {\n  const profile = JSON.parse(localStorage.getItem('profile'));\n  const userId = profile.result._id;\n  console.log(userId);\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\"); //const { user } = useContext(AuthContext);\n\n  const scrollRef = useRef();\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/v1/conversations/conversation/?userId=${userId}`).then(res => {\n      setConversations(res.data);\n    });\n  }, [userId]); // useEffect(()  =>{\n  //   const getConversations = async ()=>{\n  //     try{\n  //       const res = await axios.get(\"http://localhost:5000/api/v1/conversations/conversation/\"+userId)\n  //       //console.log(res)\n  //       setConversations(res.data);\n  //     }catch(err){\n  //       console.log(err);\n  //     }\n  //   };\n  //   getConversations();\n  // }, [userId]);\n\n  console.log(conversations);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: userId,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  }; // console.log(userId)\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Topbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messenger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMenuWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Search Friend\",\n    className: \"chatMenuInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), conversations.map(c => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setCurrentChat(c),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Conversation, {\n    conversation: c,\n    currentUserId: userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Conversation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBoxWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, currentChat ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBoxTop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, messages.map(m => /*#__PURE__*/React.createElement(Message, {\n    message: m,\n    own: m.sender === userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBoxBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"chatMessageInput\",\n    placeholder: \"Chat with friend\",\n    onChange: e => setNewMessage(e.target.value),\n    value: newMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"chatSubmitButton\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Send\"))) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"noConversationText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Open a conversation to start a chat\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatOnline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatOnlineWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/gabe/Desktop/Pomo/Team5/client/src/components/messenger/Messenger.jsx"],"names":["React","Component","Topbar","Conversation","Message","chatOnline","useContext","useEffect","useRef","useState","axios","Messenger","profile","JSON","parse","localStorage","getItem","userId","result","_id","console","log","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","scrollRef","get","then","res","data","getMessages","err","handleSubmit","e","preventDefault","message","sender","text","conversationId","post","map","c","m","target","value"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\r\nimport \"./messenger.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from  \"../../components/conversations/Conversation\";\r\nimport Message from \"../../components/message/Message\";\r\nimport chatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\n\r\n//import { useContext } from \"react\";\r\n\r\nexport default function Messenger()\r\n{\r\n  const profile = JSON.parse(localStorage.getItem('profile'))\r\n  const userId = profile.result._id\r\n  console.log(userId)\r\n \r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] =  useState(\"\");\r\n  //const { user } = useContext(AuthContext);\r\n  const scrollRef= useRef();\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000/api/v1/conversations/conversation/?userId=${userId}`)\r\n        .then(res => {\r\n          setConversations(res.data);\r\n        })\r\n      }, [userId])\r\n    // useEffect(()  =>{\r\n    //   const getConversations = async ()=>{\r\n    //     try{\r\n    //       const res = await axios.get(\"http://localhost:5000/api/v1/conversations/conversation/\"+userId)\r\n    //       //console.log(res)\r\n    //       setConversations(res.data);\r\n    //     }catch(err){\r\n    //       console.log(err);\r\n    //     }\r\n    //   };\r\n    //   getConversations();\r\n    // }, [userId]);\r\n    console.log(conversations)\r\n    useEffect(() => {\r\n      const getMessages = async () =>{\r\n        try{\r\n          const res = await axios.get(\"/messages/\"+currentChat?._id)\r\n          setMessages(res.data);\r\n        } catch (err){\r\n        console.log(err);\r\n          }\r\n        };\r\n        getMessages()\r\n    }, [currentChat]) \r\n\r\n    const handleSubmit = async(e) => {\r\n      e.preventDefault();\r\n      const message = {\r\n        sender: userId,\r\n        text: newMessage,\r\n        conversationId: currentChat._id,\r\n      };\r\n      try{\r\n        const res = await axios.post(\"/messages\", message);\r\n        setMessages([...messages, res.data])\r\n        setNewMessage(\"\");\r\n      }catch(err){\r\n        console.log(err);\r\n      }\r\n    }\r\n   // console.log(userId)\r\n    return (\r\n  <>\r\n  <Topbar />\r\n  <div className=\"messenger\">\r\n    <div className=\"chatMenu\">\r\n      <div className=\"chatMenuWrapper\">\r\n        <input placeholder=\"Search Friend\" className=\"chatMenuInput\" />\r\n        {conversations.map((c)=>(\r\n          <div onClick={()=> setCurrentChat(c)}>\r\n          <Conversation conversation={c} currentUserId={userId}/>\r\n          </div>\r\n        ))}\r\n        <Conversation/>\r\n      </div>\r\n    </div>\r\n    <div className=\"chatBox\">\r\n      <div className=\"chatBoxWrapper\">\r\n        {\r\n         currentChat ?\r\n        <>\r\n        <div className=\"chatBoxTop\">\r\n          {messages.map((m) =>(\r\n           \r\n              <Message message={m} own={m.sender === userId}/>\r\n          \r\n          ))}\r\n        \r\n        </div>\r\n        <div className=\"chatBoxBottom\">\r\n          <textarea \r\n            className=\"chatMessageInput\" \r\n            placeholder = \"Chat with friend\"\r\n            onChange={(e)=> setNewMessage(e.target.value)}\r\n            value = {newMessage}\r\n            ></textarea>\r\n          <button className=\"chatSubmitButton\" onClick = {handleSubmit}>\r\n            Send\r\n            </button>\r\n        </div></> : <span className=\"noConversationText\">Open a conversation to start a chat</span>}\r\n      </div>\r\n    </div>\r\n    <div className=\"chatOnline\">\r\n      <div className=\"chatOnlineWrapper\"></div>\r\n    </div>\r\n  </div>\r\n  \r\n    \r\n  \r\n  \r\n  </>\r\n);\r\n}"]},"metadata":{},"sourceType":"module"}