{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johnny Dean\\\\Desktop\\\\fsosubmission\\\\merge\\\\client\\\\src\\\\components\\\\TimerPage\\\\TimerDisplay\\\\QuestDisplay.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport axios from 'axios'; // implement custom themes with createtheme and theme provider eventually\n\nconst NewTaskHandler = _ref => {\n  let {\n    quests,\n    setQuests\n  } = _ref;\n  const [newQuest, setNewQuest] = useState(\"\");\n  const profile = JSON.parse(localStorage.getItem('profile'));\n  const userId = profile.result._id;\n\n  const handleQuestChange = event => {\n    setNewQuest(event.target.value);\n  };\n\n  const handleQuestAdd = () => {\n    const insertedQuest = {\n      user_id: userId,\n      task_name: newQuest\n    };\n    console.log(insertedQuest);\n    axios.post(`http://localhost:5000/api/v1/users/tasks`, {\n      insertedQuest\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: \"flex\",\n      mt: 1,\n      p: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Enter new task\",\n    variant: \"outlined\",\n    onChange: handleQuestChange,\n    value: newQuest,\n    size: \"small\",\n    sx: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: \"flex\",\n      alignItems: \"center\",\n      ml: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    onClick: handleQuestAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"+\")));\n};\n\nconst QuestDisplay = _ref2 => {\n  let {\n    setActiveTask\n  } = _ref2;\n  const [quests, setQuests] = useState([]);\n  const [selectedIndex, setSelectedIndex] = useState(1);\n  const profile = JSON.parse(localStorage.getItem('profile'));\n  const userId = profile.result._id;\n\n  const handleClick = id => {\n    setSelectedIndex(id);\n    setActiveTask(quests[id - 1].title);\n  };\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/v1/users/tasks?userId=${userId}`).then(res => {\n      setQuests(res.data.tasks);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    sx: {\n      maxHeight: 105,\n      overflow: 'auto',\n      mt: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, quests.map(quest => /*#__PURE__*/React.createElement(ListItemButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 38\n    }\n  }, \" quest \"))), /*#__PURE__*/React.createElement(NewTaskHandler, {\n    setQuests: setQuests,\n    quests: quests,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default QuestDisplay;","map":{"version":3,"sources":["C:/Users/Johnny Dean/Desktop/fsosubmission/merge/client/src/components/TimerPage/TimerDisplay/QuestDisplay.js"],"names":["React","useState","useEffect","List","ListItemButton","Button","TextField","Box","axios","NewTaskHandler","quests","setQuests","newQuest","setNewQuest","profile","JSON","parse","localStorage","getItem","userId","result","_id","handleQuestChange","event","target","value","handleQuestAdd","insertedQuest","user_id","task_name","console","log","post","display","mt","p","width","alignItems","ml","QuestDisplay","setActiveTask","selectedIndex","setSelectedIndex","handleClick","id","title","get","then","res","data","tasks","maxHeight","overflow","map","quest"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport axios from 'axios';\r\n// implement custom themes with createtheme and theme provider eventually\r\n\r\nconst NewTaskHandler = ({quests, setQuests}) => {\r\n    const [newQuest, setNewQuest] = useState(\"\")\r\n    const profile = JSON.parse(localStorage.getItem('profile'))\r\n    const userId = profile.result._id\r\n\r\n    const handleQuestChange = (event) => {\r\n        setNewQuest(event.target.value)\r\n    }\r\n\r\n    const handleQuestAdd = () => {\r\n        const insertedQuest = {\r\n            user_id: userId,\r\n            task_name: newQuest\r\n        }\r\n        console.log(insertedQuest)\r\n        axios.post(`http://localhost:5000/api/v1/users/tasks`, {insertedQuest})\r\n\r\n    }\r\n\r\nreturn (\r\n    <Box sx={{display: \"flex\", mt: 1, p: 1}}>\r\n        <TextField id=\"outlined-basic\" label=\"Enter new task\" variant=\"outlined\" onChange={handleQuestChange} value={newQuest} size=\"small\" sx={{width: \"100%\"}} />\r\n        <Box sx={{display: \"flex\", alignItems: \"center\", ml: 2}}>\r\n            <Button variant={\"contained\"} size={\"small\"} onClick={handleQuestAdd}>+</Button>\r\n        </Box>\r\n    </Box>\r\n)\r\n}\r\n\r\nconst QuestDisplay = ({setActiveTask}) => {\r\n    const [quests, setQuests] = useState([])\r\n    const [selectedIndex, setSelectedIndex] = useState(1)\r\n    const profile = JSON.parse(localStorage.getItem('profile'))\r\n    const userId = profile.result._id\r\n\r\n    const handleClick = (id) => {\r\n        setSelectedIndex(id)\r\n        setActiveTask(quests[id - 1].title)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/api/v1/users/tasks?userId=${userId}`)\r\n            .then(res => {\r\n                setQuests(res.data.tasks)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <Box>\r\n            <List sx={{maxHeight: 105, overflow: 'auto', mt: 5}}>\r\n                {quests.map(quest => <ListItemButton> quest </ListItemButton>)}\r\n            </List>\r\n            <NewTaskHandler setQuests={setQuests} quests={quests}/>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default QuestDisplay"]},"metadata":{},"sourceType":"module"}