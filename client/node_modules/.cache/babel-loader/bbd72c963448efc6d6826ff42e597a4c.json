{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johnny Dean\\\\Desktop\\\\fsosubmission\\\\merge\\\\client\\\\src\\\\components\\\\TimerPage\\\\Menu\\\\ItemShop.js\";\nimport React, { useState, useEffect } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Dialog from '@mui/material/Dialog';\nimport StoreIcon from '@mui/icons-material/Store';\nimport Typography from \"@mui/material/Typography\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\"; // will hard code an array until i can see how zacks api will return the items (item.img, item.stats, item.cost)\n\nimport Card from '@mui/material/Card';\nimport Axios from \"axios\";\nimport axios from \"axios\";\n\nconst Item = _ref => {\n  let {\n    itemName,\n    itemStats,\n    itemCost,\n    isOwned,\n    handleBuy\n  } = _ref;\n\n  if (isOwned) {\n    return /*#__PURE__*/React.createElement(Card, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        border: \"red solid 1\",\n        minWidth: 100,\n        height: 100,\n        m: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, itemName, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 32\n      }\n    }), itemStats, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 33\n      }\n    }), itemCost, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 32\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, \"Owned\"));\n  } else {\n    return /*#__PURE__*/React.createElement(Card, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        minWidth: 100,\n        height: 100,\n        m: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, itemName, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 32\n      }\n    }), itemStats, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }\n    }), itemCost, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 32\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"Buy\"));\n  }\n}; // setCharacter({...character, stats: {...character.stats, gold: updatedGold, current_xp: updatedXp, level: updatedLevel, xp_to_next_level: updatedReqExp}})\n// // error when trying to post a 0 to updatedXP stat\n// axios.put(`http://localhost:5000/api/v1/users/character`, updatedCharacter)\n//     .then(r => console.log(r))\n//     .catch(e => console.log(e.response))\n\n\nconst ItemShop = _ref2 => {\n  let {\n    character,\n    setCharacter\n  } = _ref2;\n  const [itemShop, setItemShop] = useState([]);\n  const [open, setOpen] = useState(false);\n  const profile = JSON.parse(localStorage.getItem('profile'));\n  const userId = profile.result._id;\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleBuy = item => {\n    if (character.stats.gold >= item.cost) {\n      // is it best practice to eventually make this its own function with the use of redux?\n      const updatedCharacter = {\n        userId: userId,\n        gold: character.stats.gold - item.cost,\n        inventory: character.inventory.concat(item)\n      }; // the api should probably be returning the new character for easier and more readable code\n\n      setCharacter({ ...character,\n        stats: { ...character.stats,\n          gold: character.stats.gold - item.cost\n        },\n        inventory: character.inventory.concat(item)\n      });\n      axios.put(`http://localhost:5000/api/v1/users/character`, updatedCharacter).catch(err => console.log(err));\n    } else {\n      console.log(\"not enough gold for purchase\");\n    }\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/api/v1/itemshop/\").then(res => {\n      const itemList = res.data.items;\n      setItemShop(itemList);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StoreIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      p: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, itemShop.map(item => character.inventory.includes(item) ? /*#__PURE__*/React.createElement(Item, {\n    itemName: item.name,\n    itemCost: item.cost,\n    isOwned: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 84\n    }\n  }) : /*#__PURE__*/React.createElement(Item, {\n    itemName: item.name,\n    itemCost: item.cost,\n    isOwned: false,\n    handleBuy: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 152\n    }\n  }))))));\n};\n\nexport default ItemShop;","map":{"version":3,"sources":["C:/Users/Johnny Dean/Desktop/fsosubmission/merge/client/src/components/TimerPage/Menu/ItemShop.js"],"names":["React","useState","useEffect","IconButton","Button","Box","Dialog","StoreIcon","Typography","ClickAwayListener","Card","Axios","axios","Item","itemName","itemStats","itemCost","isOwned","handleBuy","display","flexDirection","textAlign","border","minWidth","height","m","ItemShop","character","setCharacter","itemShop","setItemShop","open","setOpen","profile","JSON","parse","localStorage","getItem","userId","result","_id","handleClickOpen","handleClose","item","stats","gold","cost","updatedCharacter","inventory","concat","put","catch","err","console","log","get","then","res","itemList","data","items","flexWrap","justifyContent","p","map","includes","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport StoreIcon from '@mui/icons-material/Store';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\r\n// will hard code an array until i can see how zacks api will return the items (item.img, item.stats, item.cost)\r\nimport Card from '@mui/material/Card';\r\nimport Axios from \"axios\"\r\nimport axios from \"axios\";\r\n\r\nconst Item = ({itemName, itemStats, itemCost, isOwned, handleBuy}) => {\r\n    if(isOwned){\r\n        return (\r\n            <Card sx={{display: \"flex\", flexDirection: \"column\", textAlign: \"center\", border: \"red solid 1\" ,minWidth: 100, height: 100, m: 2}}>\r\n                <Typography>\r\n                    {itemName} <br />\r\n                    {itemStats} <br />\r\n                    {itemCost} <br />\r\n                </Typography>\r\n                <Button onClick={() => {}}>Owned</Button>\r\n            </Card>\r\n        )\r\n    } else {\r\n        return (\r\n            <Card sx={{display: \"flex\", flexDirection: \"column\", textAlign: \"center\", minWidth: 100, height: 100, m: 2}}>\r\n                <Typography>\r\n                    {itemName} <br />\r\n                    {itemStats} <br />\r\n                    {itemCost} <br />\r\n                </Typography>\r\n                <Button>Buy</Button>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n// setCharacter({...character, stats: {...character.stats, gold: updatedGold, current_xp: updatedXp, level: updatedLevel, xp_to_next_level: updatedReqExp}})\r\n// // error when trying to post a 0 to updatedXP stat\r\n// axios.put(`http://localhost:5000/api/v1/users/character`, updatedCharacter)\r\n//     .then(r => console.log(r))\r\n//     .catch(e => console.log(e.response))\r\n\r\nconst ItemShop = ({character, setCharacter}) => {\r\n    const [itemShop, setItemShop] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const profile = JSON.parse(localStorage.getItem('profile'))\r\n    const userId = profile.result._id\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleBuy = (item) => {\r\n        if ((character.stats.gold) >= item.cost){\r\n            // is it best practice to eventually make this its own function with the use of redux?\r\n            const updatedCharacter = {\r\n                userId: userId,\r\n                gold: character.stats.gold - item.cost,\r\n                inventory: character.inventory.concat(item)\r\n            }\r\n            // the api should probably be returning the new character for easier and more readable code\r\n            setCharacter({...character, stats: {...character.stats, gold: character.stats.gold - item.cost}, inventory: character.inventory.concat(item)})\r\n            axios.put(`http://localhost:5000/api/v1/users/character`, updatedCharacter).catch(err => console.log(err))\r\n        }\r\n        else {\r\n            console.log(\"not enough gold for purchase\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/api/v1/itemshop/\")\r\n            .then((res) => {\r\n                const itemList = (res.data.items)\r\n                setItemShop(itemList)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    return(\r\n        <Box>\r\n            <IconButton onClick={handleClickOpen}>\r\n                <StoreIcon />\r\n            </IconButton>\r\n\r\n            <Dialog open={open}>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                    <Box sx={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" ,p: 5}}>\r\n                        {itemShop.map(item => character.inventory.includes(item) ? <Item itemName={item.name} itemCost={item.cost} isOwned={true} /> : <Item itemName={item.name} itemCost={item.cost} isOwned={false} handleBuy={item}/>) }\r\n                    </Box>\r\n                </ClickAwayListener>\r\n            </Dialog>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ItemShop"]},"metadata":{},"sourceType":"module"}