{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nconst _excluded = [\"aria-describedby\", \"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"className\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { refType } from '@mui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport capitalize from '../utils/capitalize';\nimport Menu from '../Menu/Menu';\nimport { nativeSelectSelectStyles, nativeSelectIconStyles } from '../NativeSelect/NativeSelectInput';\nimport { isFilled } from '../InputBase/utils';\nimport styled, { slotShouldForwardProp } from '../styles/styled';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport selectClasses, { getSelectUtilityClasses } from './selectClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SelectSelect = styled('div', {\n  name: 'MuiSelect',\n  slot: 'Select',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [// Win specificity over the input base\n    {\n      [`&.${selectClasses.select}`]: styles.select\n    }, {\n      [`&.${selectClasses.select}`]: styles[ownerState.variant]\n    }, {\n      [`&.${selectClasses.multiple}`]: styles.multiple\n    }];\n  }\n})(nativeSelectSelectStyles, {\n  // Win specificity over the input base\n  [`&.${selectClasses.select}`]: {\n    height: 'auto',\n    // Resets for multiple select with chips\n    minHeight: '1.4375em',\n    // Required for select\\text-field height consistency\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  }\n});\nconst SelectIcon = styled('svg', {\n  name: 'MuiSelect',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, ownerState.variant && styles[`icon${capitalize(ownerState.variant)}`], ownerState.open && styles.iconOpen];\n  }\n})(nativeSelectIconStyles);\nconst SelectNativeInput = styled('input', {\n  shouldForwardProp: prop => slotShouldForwardProp(prop) && prop !== 'classes',\n  name: 'MuiSelect',\n  slot: 'NativeInput',\n  overridesResolver: (props, styles) => styles.nativeInput\n})({\n  bottom: 0,\n  left: 0,\n  position: 'absolute',\n  opacity: 0,\n  pointerEvents: 'none',\n  width: '100%',\n  boxSizing: 'border-box'\n});\n\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  } // The value could be a number, the DOM will stringify it anyway.\n\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    disabled,\n    multiple,\n    open\n  } = ownerState;\n  const slots = {\n    select: ['select', variant, disabled && 'disabled', multiple && 'multiple'],\n    icon: ['icon', `icon${capitalize(variant)}`, open && 'iconOpen', disabled && 'disabled'],\n    nativeInput: ['nativeInput']\n  };\n  return composeClasses(slots, getSelectUtilityClasses, classes);\n};\n/**\r\n * @ignore - internal component.\r\n */\n\n\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-label': ariaLabel,\n    autoFocus,\n    autoWidth,\n    children,\n    className,\n    defaultValue,\n    disabled,\n    displayEmpty,\n    IconComponent,\n    inputRef: inputRefProp,\n    labelId,\n    MenuProps = {},\n    multiple,\n    name,\n    onBlur,\n    onChange,\n    onClose,\n    onFocus,\n    onOpen,\n    open: openProp,\n    readOnly,\n    renderValue,\n    SelectDisplayProps = {},\n    tabIndex: tabIndexProp,\n    value: valueProp,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Select'\n  });\n  const inputRef = React.useRef(null);\n  const displayRef = React.useRef(null);\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const [openState, setOpenState] = React.useState(false);\n  const handleRef = useForkRef(ref, inputRefProp);\n  const handleDisplayRef = React.useCallback(node => {\n    displayRef.current = node;\n\n    if (node) {\n      setDisplayNode(node);\n    }\n  }, []);\n  React.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayRef.current.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [value]);\n  React.useEffect(() => {\n    if (autoFocus) {\n      displayRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useEffect(() => {\n    const label = ownerDocument(displayRef.current).getElementById(labelId);\n\n    if (label) {\n      const handler = () => {\n        if (getSelection().isCollapsed) {\n          displayRef.current.focus();\n        }\n      };\n\n      label.addEventListener('click', handler);\n      return () => {\n        label.removeEventListener('click', handler);\n      };\n    }\n\n    return undefined;\n  }, [labelId]);\n\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    } // Hijack the default focus behavior.\n\n\n    event.preventDefault();\n    displayRef.current.focus();\n    update(true, event);\n  };\n\n  const handleClose = event => {\n    update(false, event);\n  };\n\n  const childrenArray = React.Children.toArray(children); // Support autofill.\n\n  const handleChange = event => {\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\n\n    if (index === -1) {\n      return;\n    }\n\n    const child = childrenArray[index];\n    setValueState(child.props.value);\n\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n\n  const handleItemClick = child => event => {\n    let newValue; // We use the tabindex attribute to signal the available options.\n\n    if (!event.currentTarget.hasAttribute('tabindex')) {\n      return;\n    }\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n\n    if (value !== newValue) {\n      setValueState(newValue);\n\n      if (onChange) {\n        // Redefine target to allow name and value to be read.\n        // This allows seamless integration with the most popular form libraries.\n        // https://github.com/mui-org/material-ui/issues/13485#issuecomment-676048492\n        // Clone the event to not override `target` of the original event.\n        const nativeEvent = event.nativeEvent || event;\n        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n        Object.defineProperty(clonedEvent, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name\n          }\n        });\n        onChange(clonedEvent, child);\n      }\n    }\n\n    if (!multiple) {\n      update(false, event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n\n  const open = displayNode !== null && (isOpenControlled ? openProp : openState);\n\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      // Preact support, target is read only property on a native event.\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n\n  delete other['aria-invalid'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false; // No need to display any value if the field is empty.\n\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  const items = childrenArray.map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    let selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\n      }\n\n      selected = value.some(v => areEqualValues(v, child.props.value));\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    if (selected) {\n      foundMatch = true;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : 'false',\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!foundMatch && !multiple && value !== '') {\n        const values = childrenArray.map(child => child.props.value);\n        console.warn([`MUI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\n      }\n    }, [foundMatch, childrenArray, multiple, name, value]);\n  }\n\n  if (computeDisplay) {\n    if (multiple) {\n      display = displayMultiple.reduce((prev, curr) => [prev, ', ', curr]);\n    } else {\n      display = displaySingle;\n    }\n  } // Avoid performing a layout computation in the render method.\n\n\n  let menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = displayNode.clientWidth;\n  }\n\n  let tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n\n  const ownerState = _extends({}, props, {\n    variant,\n    value,\n    open\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(SelectSelect, _extends({\n      ref: handleDisplayRef,\n      tabIndex: tabIndex,\n      role: \"button\",\n      \"aria-disabled\": disabled ? 'true' : undefined,\n      \"aria-expanded\": open ? 'true' : 'false',\n      \"aria-haspopup\": \"listbox\",\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\n      \"aria-describedby\": ariaDescribedby,\n      onKeyDown: handleKeyDown,\n      onMouseDown: disabled || readOnly ? null : handleMouseDown,\n      onBlur: handleBlur,\n      onFocus: onFocus\n    }, SelectDisplayProps, {\n      ownerState: ownerState,\n      className: clsx(classes.select, className, SelectDisplayProps.className) // The id is required for proper a11y\n      ,\n      id: buttonId,\n      children: isEmpty(display) ?\n      /*#__PURE__*/\n      // notranslate needed while Google Translate will not fix zero-width space issue\n      // eslint-disable-next-line react/no-danger\n      _jsx(\"span\", {\n        className: \"notranslate\",\n        dangerouslySetInnerHTML: {\n          __html: '&#8203;'\n        }\n      }) : display\n    })), /*#__PURE__*/_jsx(SelectNativeInput, _extends({\n      value: Array.isArray(value) ? value.join(',') : value,\n      name: name,\n      ref: inputRef,\n      \"aria-hidden\": true,\n      onChange: handleChange,\n      tabIndex: -1,\n      disabled: disabled,\n      className: classes.nativeInput,\n      autoFocus: autoFocus,\n      ownerState: ownerState\n    }, other)), /*#__PURE__*/_jsx(SelectIcon, {\n      as: IconComponent,\n      className: classes.icon,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(Menu, _extends({\n      id: `menu-${name || ''}`,\n      anchorEl: displayNode,\n      open: open,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      }\n    }, MenuProps, {\n      MenuListProps: _extends({\n        'aria-labelledby': labelId,\n        role: 'listbox',\n        disableListWrap: true\n      }, MenuProps.MenuListProps),\n      PaperProps: _extends({}, MenuProps.PaperProps, {\n        style: _extends({\n          minWidth: menuMinWidth\n        }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n      }),\n      children: items\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\r\n   * @ignore\r\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  'aria-label': PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, the width of the popover will automatically be set according to the items inside the\r\n   * menu, otherwise it will be at least the width of the select input.\r\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\r\n   * The option elements to populate the select with.\r\n   * Can be some `<MenuItem>` elements.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * The CSS class name of the select element.\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The default value. Use when the component is not controlled.\r\n   */\n  defaultValue: PropTypes.any,\n\n  /**\r\n   * If `true`, the select is disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, the selected item is displayed even if its value is empty.\r\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\r\n   * The icon that displays the arrow.\r\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n\n  /**\r\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\r\n   * Equivalent to `ref`\r\n   */\n  inputRef: refType,\n\n  /**\r\n   * The ID of an element that acts as an additional label. The Select will\r\n   * be labelled by the additional label and the selected value.\r\n   */\n  labelId: PropTypes.string,\n\n  /**\r\n   * Props applied to the [`Menu`](/api/menu/) element.\r\n   */\n  MenuProps: PropTypes.object,\n\n  /**\r\n   * If `true`, `value` must be an array and the menu will support multiple selections.\r\n   */\n  multiple: PropTypes.bool,\n\n  /**\r\n   * Name attribute of the `select` or hidden `input` element.\r\n   */\n  name: PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  onBlur: PropTypes.func,\n\n  /**\r\n   * Callback fired when a menu item is selected.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new value by accessing `event.target.value` (any).\r\n   * @param {object} [child] The react element that was selected.\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onFocus: PropTypes.func,\n\n  /**\r\n   * Callback fired when the component requests to be opened.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\n  onOpen: PropTypes.func,\n\n  /**\r\n   * If `true`, the component is shown.\r\n   */\n  open: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  readOnly: PropTypes.bool,\n\n  /**\r\n   * Render the selected value.\r\n   *\r\n   * @param {any} value The `value` provided to the component.\r\n   * @returns {ReactNode}\r\n   */\n  renderValue: PropTypes.func,\n\n  /**\r\n   * Props applied to the clickable div element.\r\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\r\n   * @ignore\r\n   */\n  type: PropTypes.any,\n\n  /**\r\n   * The input value.\r\n   */\n  value: PropTypes.any,\n\n  /**\r\n   * The variant to use.\r\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;","map":{"version":3,"sources":["C:/Users/juanc/Desktop/KingdomDT/FS-CSCI150-F21-Team6/client/node_modules/@mui/material/Select/SelectInput.js"],"names":["_extends","_objectWithoutPropertiesLoose","formatMuiErrorMessage","_formatMuiErrorMessage","_excluded","React","isFragment","PropTypes","clsx","unstable_composeClasses","composeClasses","refType","ownerDocument","capitalize","Menu","nativeSelectSelectStyles","nativeSelectIconStyles","isFilled","styled","slotShouldForwardProp","useForkRef","useControlled","selectClasses","getSelectUtilityClasses","jsx","_jsx","jsxs","_jsxs","SelectSelect","name","slot","overridesResolver","props","styles","ownerState","select","variant","multiple","height","minHeight","textOverflow","whiteSpace","overflow","SelectIcon","icon","open","iconOpen","SelectNativeInput","shouldForwardProp","prop","nativeInput","bottom","left","position","opacity","pointerEvents","width","boxSizing","areEqualValues","a","b","String","isEmpty","display","trim","useUtilityClasses","classes","disabled","slots","SelectInput","forwardRef","ref","ariaDescribedby","ariaLabel","autoFocus","autoWidth","children","className","defaultValue","displayEmpty","IconComponent","inputRef","inputRefProp","labelId","MenuProps","onBlur","onChange","onClose","onFocus","onOpen","openProp","readOnly","renderValue","SelectDisplayProps","tabIndex","tabIndexProp","value","valueProp","other","setValueState","controlled","default","useRef","displayRef","displayNode","setDisplayNode","useState","current","isOpenControlled","menuMinWidthState","setMenuMinWidthState","openState","setOpenState","handleRef","handleDisplayRef","useCallback","node","useImperativeHandle","focus","useEffect","label","getElementById","handler","getSelection","isCollapsed","addEventListener","removeEventListener","undefined","update","event","clientWidth","handleMouseDown","button","preventDefault","handleClose","childrenArray","Children","toArray","handleChange","index","map","child","indexOf","target","handleItemClick","newValue","currentTarget","hasAttribute","Array","isArray","slice","itemIndex","push","splice","onClick","nativeEvent","clonedEvent","constructor","type","Object","defineProperty","writable","handleKeyDown","validKeys","key","handleBlur","displaySingle","displayMultiple","computeDisplay","foundMatch","items","isValidElement","process","env","NODE_ENV","console","error","join","selected","Error","some","v","cloneElement","onKeyUp","role","values","warn","filter","x","reduce","prev","curr","menuMinWidth","buttonId","id","Fragment","Boolean","onKeyDown","onMouseDown","dangerouslySetInnerHTML","__html","as","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuListProps","disableListWrap","PaperProps","style","minWidth","propTypes","string","bool","object","any","elementType","isRequired","func","oneOfType","number","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\r\nconst _excluded = [\"aria-describedby\", \"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"className\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"];\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\r\nimport { refType } from '@mui/utils';\r\nimport ownerDocument from '../utils/ownerDocument';\r\nimport capitalize from '../utils/capitalize';\r\nimport Menu from '../Menu/Menu';\r\nimport { nativeSelectSelectStyles, nativeSelectIconStyles } from '../NativeSelect/NativeSelectInput';\r\nimport { isFilled } from '../InputBase/utils';\r\nimport styled, { slotShouldForwardProp } from '../styles/styled';\r\nimport useForkRef from '../utils/useForkRef';\r\nimport useControlled from '../utils/useControlled';\r\nimport selectClasses, { getSelectUtilityClasses } from './selectClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst SelectSelect = styled('div', {\r\n  name: 'MuiSelect',\r\n  slot: 'Select',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [// Win specificity over the input base\r\n    {\r\n      [`&.${selectClasses.select}`]: styles.select\r\n    }, {\r\n      [`&.${selectClasses.select}`]: styles[ownerState.variant]\r\n    }, {\r\n      [`&.${selectClasses.multiple}`]: styles.multiple\r\n    }];\r\n  }\r\n})(nativeSelectSelectStyles, {\r\n  // Win specificity over the input base\r\n  [`&.${selectClasses.select}`]: {\r\n    height: 'auto',\r\n    // Resets for multiple select with chips\r\n    minHeight: '1.4375em',\r\n    // Required for select\\text-field height consistency\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden'\r\n  }\r\n});\r\nconst SelectIcon = styled('svg', {\r\n  name: 'MuiSelect',\r\n  slot: 'Icon',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [styles.icon, ownerState.variant && styles[`icon${capitalize(ownerState.variant)}`], ownerState.open && styles.iconOpen];\r\n  }\r\n})(nativeSelectIconStyles);\r\nconst SelectNativeInput = styled('input', {\r\n  shouldForwardProp: prop => slotShouldForwardProp(prop) && prop !== 'classes',\r\n  name: 'MuiSelect',\r\n  slot: 'NativeInput',\r\n  overridesResolver: (props, styles) => styles.nativeInput\r\n})({\r\n  bottom: 0,\r\n  left: 0,\r\n  position: 'absolute',\r\n  opacity: 0,\r\n  pointerEvents: 'none',\r\n  width: '100%',\r\n  boxSizing: 'border-box'\r\n});\r\n\r\nfunction areEqualValues(a, b) {\r\n  if (typeof b === 'object' && b !== null) {\r\n    return a === b;\r\n  } // The value could be a number, the DOM will stringify it anyway.\r\n\r\n\r\n  return String(a) === String(b);\r\n}\r\n\r\nfunction isEmpty(display) {\r\n  return display == null || typeof display === 'string' && !display.trim();\r\n}\r\n\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    variant,\r\n    disabled,\r\n    multiple,\r\n    open\r\n  } = ownerState;\r\n  const slots = {\r\n    select: ['select', variant, disabled && 'disabled', multiple && 'multiple'],\r\n    icon: ['icon', `icon${capitalize(variant)}`, open && 'iconOpen', disabled && 'disabled'],\r\n    nativeInput: ['nativeInput']\r\n  };\r\n  return composeClasses(slots, getSelectUtilityClasses, classes);\r\n};\r\n/**\r\n * @ignore - internal component.\r\n */\r\n\r\n\r\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\r\n  const {\r\n    'aria-describedby': ariaDescribedby,\r\n    'aria-label': ariaLabel,\r\n    autoFocus,\r\n    autoWidth,\r\n    children,\r\n    className,\r\n    defaultValue,\r\n    disabled,\r\n    displayEmpty,\r\n    IconComponent,\r\n    inputRef: inputRefProp,\r\n    labelId,\r\n    MenuProps = {},\r\n    multiple,\r\n    name,\r\n    onBlur,\r\n    onChange,\r\n    onClose,\r\n    onFocus,\r\n    onOpen,\r\n    open: openProp,\r\n    readOnly,\r\n    renderValue,\r\n    SelectDisplayProps = {},\r\n    tabIndex: tabIndexProp,\r\n    value: valueProp,\r\n    variant = 'standard'\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, _excluded);\r\n\r\n  const [value, setValueState] = useControlled({\r\n    controlled: valueProp,\r\n    default: defaultValue,\r\n    name: 'Select'\r\n  });\r\n  const inputRef = React.useRef(null);\r\n  const displayRef = React.useRef(null);\r\n  const [displayNode, setDisplayNode] = React.useState(null);\r\n  const {\r\n    current: isOpenControlled\r\n  } = React.useRef(openProp != null);\r\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\r\n  const [openState, setOpenState] = React.useState(false);\r\n  const handleRef = useForkRef(ref, inputRefProp);\r\n  const handleDisplayRef = React.useCallback(node => {\r\n    displayRef.current = node;\r\n\r\n    if (node) {\r\n      setDisplayNode(node);\r\n    }\r\n  }, []);\r\n  React.useImperativeHandle(handleRef, () => ({\r\n    focus: () => {\r\n      displayRef.current.focus();\r\n    },\r\n    node: inputRef.current,\r\n    value\r\n  }), [value]);\r\n  React.useEffect(() => {\r\n    if (autoFocus) {\r\n      displayRef.current.focus();\r\n    }\r\n  }, [autoFocus]);\r\n  React.useEffect(() => {\r\n    const label = ownerDocument(displayRef.current).getElementById(labelId);\r\n\r\n    if (label) {\r\n      const handler = () => {\r\n        if (getSelection().isCollapsed) {\r\n          displayRef.current.focus();\r\n        }\r\n      };\r\n\r\n      label.addEventListener('click', handler);\r\n      return () => {\r\n        label.removeEventListener('click', handler);\r\n      };\r\n    }\r\n\r\n    return undefined;\r\n  }, [labelId]);\r\n\r\n  const update = (open, event) => {\r\n    if (open) {\r\n      if (onOpen) {\r\n        onOpen(event);\r\n      }\r\n    } else if (onClose) {\r\n      onClose(event);\r\n    }\r\n\r\n    if (!isOpenControlled) {\r\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\r\n      setOpenState(open);\r\n    }\r\n  };\r\n\r\n  const handleMouseDown = event => {\r\n    // Ignore everything but left-click\r\n    if (event.button !== 0) {\r\n      return;\r\n    } // Hijack the default focus behavior.\r\n\r\n\r\n    event.preventDefault();\r\n    displayRef.current.focus();\r\n    update(true, event);\r\n  };\r\n\r\n  const handleClose = event => {\r\n    update(false, event);\r\n  };\r\n\r\n  const childrenArray = React.Children.toArray(children); // Support autofill.\r\n\r\n  const handleChange = event => {\r\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\r\n\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n\r\n    const child = childrenArray[index];\r\n    setValueState(child.props.value);\r\n\r\n    if (onChange) {\r\n      onChange(event, child);\r\n    }\r\n  };\r\n\r\n  const handleItemClick = child => event => {\r\n    let newValue; // We use the tabindex attribute to signal the available options.\r\n\r\n    if (!event.currentTarget.hasAttribute('tabindex')) {\r\n      return;\r\n    }\r\n\r\n    if (multiple) {\r\n      newValue = Array.isArray(value) ? value.slice() : [];\r\n      const itemIndex = value.indexOf(child.props.value);\r\n\r\n      if (itemIndex === -1) {\r\n        newValue.push(child.props.value);\r\n      } else {\r\n        newValue.splice(itemIndex, 1);\r\n      }\r\n    } else {\r\n      newValue = child.props.value;\r\n    }\r\n\r\n    if (child.props.onClick) {\r\n      child.props.onClick(event);\r\n    }\r\n\r\n    if (value !== newValue) {\r\n      setValueState(newValue);\r\n\r\n      if (onChange) {\r\n        // Redefine target to allow name and value to be read.\r\n        // This allows seamless integration with the most popular form libraries.\r\n        // https://github.com/mui-org/material-ui/issues/13485#issuecomment-676048492\r\n        // Clone the event to not override `target` of the original event.\r\n        const nativeEvent = event.nativeEvent || event;\r\n        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\r\n        Object.defineProperty(clonedEvent, 'target', {\r\n          writable: true,\r\n          value: {\r\n            value: newValue,\r\n            name\r\n          }\r\n        });\r\n        onChange(clonedEvent, child);\r\n      }\r\n    }\r\n\r\n    if (!multiple) {\r\n      update(false, event);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = event => {\r\n    if (!readOnly) {\r\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\r\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\r\n      'Enter'];\r\n\r\n      if (validKeys.indexOf(event.key) !== -1) {\r\n        event.preventDefault();\r\n        update(true, event);\r\n      }\r\n    }\r\n  };\r\n\r\n  const open = displayNode !== null && (isOpenControlled ? openProp : openState);\r\n\r\n  const handleBlur = event => {\r\n    // if open event.stopImmediatePropagation\r\n    if (!open && onBlur) {\r\n      // Preact support, target is read only property on a native event.\r\n      Object.defineProperty(event, 'target', {\r\n        writable: true,\r\n        value: {\r\n          value,\r\n          name\r\n        }\r\n      });\r\n      onBlur(event);\r\n    }\r\n  };\r\n\r\n  delete other['aria-invalid'];\r\n  let display;\r\n  let displaySingle;\r\n  const displayMultiple = [];\r\n  let computeDisplay = false;\r\n  let foundMatch = false; // No need to display any value if the field is empty.\r\n\r\n  if (isFilled({\r\n    value\r\n  }) || displayEmpty) {\r\n    if (renderValue) {\r\n      display = renderValue(value);\r\n    } else {\r\n      computeDisplay = true;\r\n    }\r\n  }\r\n\r\n  const items = childrenArray.map(child => {\r\n    if (! /*#__PURE__*/React.isValidElement(child)) {\r\n      return null;\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"MUI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n\r\n    let selected;\r\n\r\n    if (multiple) {\r\n      if (!Array.isArray(value)) {\r\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\r\n      }\r\n\r\n      selected = value.some(v => areEqualValues(v, child.props.value));\r\n\r\n      if (selected && computeDisplay) {\r\n        displayMultiple.push(child.props.children);\r\n      }\r\n    } else {\r\n      selected = areEqualValues(value, child.props.value);\r\n\r\n      if (selected && computeDisplay) {\r\n        displaySingle = child.props.children;\r\n      }\r\n    }\r\n\r\n    if (selected) {\r\n      foundMatch = true;\r\n    }\r\n\r\n    return /*#__PURE__*/React.cloneElement(child, {\r\n      'aria-selected': selected ? 'true' : 'false',\r\n      onClick: handleItemClick(child),\r\n      onKeyUp: event => {\r\n        if (event.key === ' ') {\r\n          // otherwise our MenuItems dispatches a click event\r\n          // it's not behavior of the native <option> and causes\r\n          // the select to close immediately since we open on space keydown\r\n          event.preventDefault();\r\n        }\r\n\r\n        if (child.props.onKeyUp) {\r\n          child.props.onKeyUp(event);\r\n        }\r\n      },\r\n      role: 'option',\r\n      selected,\r\n      value: undefined,\r\n      // The value is most likely not a valid HTML attribute.\r\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\r\n\r\n    });\r\n  });\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    React.useEffect(() => {\r\n      if (!foundMatch && !multiple && value !== '') {\r\n        const values = childrenArray.map(child => child.props.value);\r\n        console.warn([`MUI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\r\n      }\r\n    }, [foundMatch, childrenArray, multiple, name, value]);\r\n  }\r\n\r\n  if (computeDisplay) {\r\n    if (multiple) {\r\n      display = displayMultiple.reduce((prev, curr) => [prev, ', ', curr]);\r\n    } else {\r\n      display = displaySingle;\r\n    }\r\n  } // Avoid performing a layout computation in the render method.\r\n\r\n\r\n  let menuMinWidth = menuMinWidthState;\r\n\r\n  if (!autoWidth && isOpenControlled && displayNode) {\r\n    menuMinWidth = displayNode.clientWidth;\r\n  }\r\n\r\n  let tabIndex;\r\n\r\n  if (typeof tabIndexProp !== 'undefined') {\r\n    tabIndex = tabIndexProp;\r\n  } else {\r\n    tabIndex = disabled ? null : 0;\r\n  }\r\n\r\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\r\n\r\n  const ownerState = _extends({}, props, {\r\n    variant,\r\n    value,\r\n    open\r\n  });\r\n\r\n  const classes = useUtilityClasses(ownerState);\r\n  return /*#__PURE__*/_jsxs(React.Fragment, {\r\n    children: [/*#__PURE__*/_jsx(SelectSelect, _extends({\r\n      ref: handleDisplayRef,\r\n      tabIndex: tabIndex,\r\n      role: \"button\",\r\n      \"aria-disabled\": disabled ? 'true' : undefined,\r\n      \"aria-expanded\": open ? 'true' : 'false',\r\n      \"aria-haspopup\": \"listbox\",\r\n      \"aria-label\": ariaLabel,\r\n      \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\r\n      \"aria-describedby\": ariaDescribedby,\r\n      onKeyDown: handleKeyDown,\r\n      onMouseDown: disabled || readOnly ? null : handleMouseDown,\r\n      onBlur: handleBlur,\r\n      onFocus: onFocus\r\n    }, SelectDisplayProps, {\r\n      ownerState: ownerState,\r\n      className: clsx(classes.select, className, SelectDisplayProps.className) // The id is required for proper a11y\r\n      ,\r\n      id: buttonId,\r\n      children: isEmpty(display) ?\r\n      /*#__PURE__*/\r\n      // notranslate needed while Google Translate will not fix zero-width space issue\r\n      // eslint-disable-next-line react/no-danger\r\n      _jsx(\"span\", {\r\n        className: \"notranslate\",\r\n        dangerouslySetInnerHTML: {\r\n          __html: '&#8203;'\r\n        }\r\n      }) : display\r\n    })), /*#__PURE__*/_jsx(SelectNativeInput, _extends({\r\n      value: Array.isArray(value) ? value.join(',') : value,\r\n      name: name,\r\n      ref: inputRef,\r\n      \"aria-hidden\": true,\r\n      onChange: handleChange,\r\n      tabIndex: -1,\r\n      disabled: disabled,\r\n      className: classes.nativeInput,\r\n      autoFocus: autoFocus,\r\n      ownerState: ownerState\r\n    }, other)), /*#__PURE__*/_jsx(SelectIcon, {\r\n      as: IconComponent,\r\n      className: classes.icon,\r\n      ownerState: ownerState\r\n    }), /*#__PURE__*/_jsx(Menu, _extends({\r\n      id: `menu-${name || ''}`,\r\n      anchorEl: displayNode,\r\n      open: open,\r\n      onClose: handleClose,\r\n      anchorOrigin: {\r\n        vertical: 'bottom',\r\n        horizontal: 'center'\r\n      },\r\n      transformOrigin: {\r\n        vertical: 'top',\r\n        horizontal: 'center'\r\n      }\r\n    }, MenuProps, {\r\n      MenuListProps: _extends({\r\n        'aria-labelledby': labelId,\r\n        role: 'listbox',\r\n        disableListWrap: true\r\n      }, MenuProps.MenuListProps),\r\n      PaperProps: _extends({}, MenuProps.PaperProps, {\r\n        style: _extends({\r\n          minWidth: menuMinWidth\r\n        }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\r\n      }),\r\n      children: items\r\n    }))]\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\r\n  /**\r\n   * @ignore\r\n   */\r\n  'aria-describedby': PropTypes.string,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  'aria-label': PropTypes.string,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the width of the popover will automatically be set according to the items inside the\r\n   * menu, otherwise it will be at least the width of the select input.\r\n   */\r\n  autoWidth: PropTypes.bool,\r\n\r\n  /**\r\n   * The option elements to populate the select with.\r\n   * Can be some `<MenuItem>` elements.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * The CSS class name of the select element.\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The default value. Use when the component is not controlled.\r\n   */\r\n  defaultValue: PropTypes.any,\r\n\r\n  /**\r\n   * If `true`, the select is disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the selected item is displayed even if its value is empty.\r\n   */\r\n  displayEmpty: PropTypes.bool,\r\n\r\n  /**\r\n   * The icon that displays the arrow.\r\n   */\r\n  IconComponent: PropTypes.elementType.isRequired,\r\n\r\n  /**\r\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\r\n   * Equivalent to `ref`\r\n   */\r\n  inputRef: refType,\r\n\r\n  /**\r\n   * The ID of an element that acts as an additional label. The Select will\r\n   * be labelled by the additional label and the selected value.\r\n   */\r\n  labelId: PropTypes.string,\r\n\r\n  /**\r\n   * Props applied to the [`Menu`](/api/menu/) element.\r\n   */\r\n  MenuProps: PropTypes.object,\r\n\r\n  /**\r\n   * If `true`, `value` must be an array and the menu will support multiple selections.\r\n   */\r\n  multiple: PropTypes.bool,\r\n\r\n  /**\r\n   * Name attribute of the `select` or hidden `input` element.\r\n   */\r\n  name: PropTypes.string,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onBlur: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when a menu item is selected.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new value by accessing `event.target.value` (any).\r\n   * @param {object} [child] The react element that was selected.\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onFocus: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be opened.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\r\n  onOpen: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the component is shown.\r\n   */\r\n  open: PropTypes.bool,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  readOnly: PropTypes.bool,\r\n\r\n  /**\r\n   * Render the selected value.\r\n   *\r\n   * @param {any} value The `value` provided to the component.\r\n   * @returns {ReactNode}\r\n   */\r\n  renderValue: PropTypes.func,\r\n\r\n  /**\r\n   * Props applied to the clickable div element.\r\n   */\r\n  SelectDisplayProps: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  type: PropTypes.any,\r\n\r\n  /**\r\n   * The input value.\r\n   */\r\n  value: PropTypes.any,\r\n\r\n  /**\r\n   * The variant to use.\r\n   */\r\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\r\n} : void 0;\r\nexport default SelectInput;"]},"metadata":{},"sourceType":"module"}