{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johnny Dean\\\\Desktop\\\\fsosubmission\\\\merge\\\\client\\\\src\\\\components\\\\TimerPage\\\\Menu\\\\ItemShop.js\";\nimport React, { useState, useEffect } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Dialog from '@mui/material/Dialog';\nimport StoreIcon from '@mui/icons-material/Store';\nimport Typography from \"@mui/material/Typography\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\"; // will hard code an array until i can see how zacks api will return the items (item.img, item.stats, item.cost)\n\nimport Card from '@mui/material/Card';\nimport Axios from \"axios\";\n\nconst Item = _ref => {\n  let {\n    itemName,\n    itemStats,\n    itemPrice,\n    itemImg,\n    isOwned\n  } = _ref;\n  const [itemShop, setItemShop] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/api/v1/itemshop/\").then(resp => setItemShop(resp));\n  }, []);\n\n  const handleBuyClick = () => {//    api call here to update character and set status to bought\n  };\n\n  if (isOwned) {\n    return /*#__PURE__*/React.createElement(Card, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        border: \"red solid 1\",\n        minWidth: 100,\n        height: 100,\n        m: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, itemName, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 32\n      }\n    }), itemStats, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }\n    }), itemPrice, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleBuyClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"Owned\"));\n  } else {\n    return /*#__PURE__*/React.createElement(Card, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        minWidth: 100,\n        height: 100,\n        m: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, itemName, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 32\n      }\n    }), itemStats, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }), itemPrice, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Buy\"));\n  }\n};\n\nconst ItemShop = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StoreIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      p: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, itemShop.map(item => /*#__PURE__*/React.createElement(Item, {\n    itemName: item.name,\n    itemStats: \"+Str\",\n    itemPrice: item.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 47\n    }\n  }))))));\n};\n\nexport default ItemShop;","map":{"version":3,"sources":["C:/Users/Johnny Dean/Desktop/fsosubmission/merge/client/src/components/TimerPage/Menu/ItemShop.js"],"names":["React","useState","useEffect","IconButton","Button","Box","Dialog","StoreIcon","Typography","ClickAwayListener","Card","Axios","Item","itemName","itemStats","itemPrice","itemImg","isOwned","itemShop","setItemShop","get","then","resp","handleBuyClick","display","flexDirection","textAlign","border","minWidth","height","m","ItemShop","open","setOpen","handleClickOpen","handleClose","flexWrap","justifyContent","p","map","item","name","price"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport StoreIcon from '@mui/icons-material/Store';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\r\n// will hard code an array until i can see how zacks api will return the items (item.img, item.stats, item.cost)\r\nimport Card from '@mui/material/Card';\r\nimport Axios from \"axios\"\r\n\r\nconst Item = ({itemName, itemStats, itemPrice, itemImg, isOwned}) => {\r\n    const [itemShop, setItemShop] = useState([])\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/api/v1/itemshop/\")\r\n            .then(resp => setItemShop(resp))\r\n    }, [])\r\n    const handleBuyClick = () => {\r\n    //    api call here to update character and set status to bought\r\n\r\n    }\r\n\r\n    if(isOwned){\r\n        return (\r\n            <Card sx={{display: \"flex\", flexDirection: \"column\", textAlign: \"center\", border: \"red solid 1\" ,minWidth: 100, height: 100, m: 2}}>\r\n                <Typography>\r\n                    {itemName} <br />\r\n                    {itemStats} <br />\r\n                    {itemPrice} <br />\r\n                </Typography>\r\n                <Button onClick={handleBuyClick}>Owned</Button>\r\n            </Card>\r\n        )\r\n    } else {\r\n        return (\r\n            <Card sx={{display: \"flex\", flexDirection: \"column\", textAlign: \"center\", minWidth: 100, height: 100, m: 2}}>\r\n                <Typography>\r\n                    {itemName} <br />\r\n                    {itemStats} <br />\r\n                    {itemPrice} <br />\r\n                </Typography>\r\n                <Button>Buy</Button>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst ItemShop = () => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return(\r\n        <Box>\r\n            <IconButton onClick={handleClickOpen}>\r\n                <StoreIcon />\r\n            </IconButton>\r\n\r\n            <Dialog open={open}>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                    <Box sx={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" ,p: 5}}>\r\n                        {itemShop.map(item => <Item itemName={item.name} itemStats={\"+Str\"} itemPrice={item.price} />)}\r\n                    </Box>\r\n                </ClickAwayListener>\r\n            </Dialog>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ItemShop"]},"metadata":{},"sourceType":"module"}