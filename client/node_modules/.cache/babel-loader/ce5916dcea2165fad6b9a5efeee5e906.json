{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabe\\\\Desktop\\\\Pomo\\\\Team5\\\\client\\\\src\\\\components\\\\messenger\\\\Messenger.jsx\";\nimport React, { Component } from 'react';\nimport \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"../../components/conversations/Conversation\";\nimport Message from \"../../components/message/Message\";\nimport chatOnline from \"../../components/chatOnline/ChatOnline\";\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nconst userId = profile.result._id; //import { useContext } from \"react\";\n\nexport default function Messenger() {\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const {\n    user\n  } = useContext(AuthContext);\n  const scrollRef = useRef();\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"/conversations/\" + user._id);\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [userId]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setMessages([...messages, res.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Topbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messenger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatMenuWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Search Friend\",\n    className: \"chatMenuInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), conversations.map(c => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setCurrentChat(c),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Conversation, {\n    conversation: c,\n    currentUser: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Conversation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBoxWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, currentChat ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBoxTop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, messages.map(m => /*#__PURE__*/React.createElement(Message, {\n    message: m,\n    own: m.sender === user._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatBoxBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"chatMessageInput\",\n    placeholder: \"Chat with friend\",\n    onChange: e => setNewMessage(e.target.value),\n    value: newMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"chatSubmitButton\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Send\"))) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"noConversationText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"Open a conversation to start a chat\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatOnline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatOnlineWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/gabe/Desktop/Pomo/Team5/client/src/components/messenger/Messenger.jsx"],"names":["React","Component","Topbar","Conversation","Message","chatOnline","useContext","useEffect","useRef","useState","AuthContext","axios","userId","profile","result","_id","Messenger","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","user","scrollRef","getConversations","res","get","data","err","console","log","getMessages","handleSubmit","e","preventDefault","message","sender","text","conversationId","post","map","c","m","target","value"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\r\nimport \"./messenger.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from  \"../../components/conversations/Conversation\";\r\nimport Message from \"../../components/message/Message\";\r\nimport chatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport  { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nconst userId = profile.result._id\r\n\r\n//import { useContext } from \"react\";\r\n\r\nexport default function Messenger()\r\n{\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] =  useState(\"\");\r\n  const { user } = useContext(AuthContext);\r\n  const scrollRef= useRef();\r\n\r\n    useEffect(()  =>{\r\n      const getConversations = async ()=>{\r\n        try{\r\n          const res = await axios.get(\"/conversations/\"+user._id)\r\n          setConversations(res.data);\r\n        }catch(err){\r\n          console.log(err);\r\n        }\r\n      };\r\n      getConversations();\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n      const getMessages = async () =>{\r\n        try{\r\n          const res = await axios.get(\"/messages/\"+currentChat?._id)\r\n          setMessages(res.data);\r\n        } catch (err){\r\n        console.log(err);\r\n          }\r\n        };\r\n        getMessages()\r\n    }, [currentChat])\r\n\r\n    const handleSubmit = async(e) => {\r\n      e.preventDefault();\r\n      const message = {\r\n        sender: user._id,\r\n        text: newMessage,\r\n        conversationId: currentChat._id,\r\n      };\r\n      try{\r\n        const res = await axios.post(\"/messages\", message);\r\n        setMessages([...messages, res.data])\r\n        setNewMessage(\"\");\r\n      }catch(err){\r\n        console.log(err);\r\n      }\r\n    }\r\n\r\n    return (\r\n  <>\r\n  <Topbar />\r\n  <div className=\"messenger\">\r\n    <div className=\"chatMenu\">\r\n      <div className=\"chatMenuWrapper\">\r\n        <input placeholder=\"Search Friend\" className=\"chatMenuInput\" />\r\n        {conversations.map((c)=>(\r\n          <div onClick={()=> setCurrentChat(c)}>\r\n          <Conversation conversation={c} currentUser={user}/>\r\n          </div>\r\n        ))}\r\n        <Conversation/>\r\n      </div>\r\n    </div>\r\n    <div className=\"chatBox\">\r\n      <div className=\"chatBoxWrapper\">\r\n        {\r\n         currentChat ?\r\n        <>\r\n        <div className=\"chatBoxTop\">\r\n          {messages.map((m) =>(\r\n           \r\n              <Message message={m} own={m.sender === user._id}/>\r\n          \r\n          ))}\r\n        \r\n        </div>\r\n        <div className=\"chatBoxBottom\">\r\n          <textarea \r\n            className=\"chatMessageInput\" \r\n            placeholder = \"Chat with friend\"\r\n            onChange={(e)=> setNewMessage(e.target.value)}\r\n            value = {newMessage}\r\n            ></textarea>\r\n          <button className=\"chatSubmitButton\" onClick = {handleSubmit}>\r\n            Send\r\n            </button>\r\n        </div></> : <span className=\"noConversationText\">Open a conversation to start a chat</span>}\r\n      </div>\r\n    </div>\r\n    <div className=\"chatOnline\">\r\n      <div className=\"chatOnlineWrapper\"></div>\r\n    </div>\r\n  </div>\r\n  \r\n    \r\n  \r\n  \r\n  </>\r\n);\r\n}"]},"metadata":{},"sourceType":"module"}