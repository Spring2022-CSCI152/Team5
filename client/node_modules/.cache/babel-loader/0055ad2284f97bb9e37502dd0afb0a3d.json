{"ast":null,"code":"/*! https://mths.be/utf8js v2.1.2 by @mathias */\nvar stringFromCharCode = String.fromCharCode; // Taken from https://mths.be/punycode\n\nfunction ucs2decode(string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  var value;\n  var extra;\n\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n\n      if ((extra & 0xFC00) == 0xDC00) {\n        // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n\n  return output;\n} // Taken from https://mths.be/punycode\n\n\nfunction ucs2encode(array) {\n  var length = array.length;\n  var index = -1;\n  var value;\n  var output = '';\n\n  while (++index < length) {\n    value = array[index];\n\n    if (value > 0xFFFF) {\n      value -= 0x10000;\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n      value = 0xDC00 | value & 0x3FF;\n    }\n\n    output += stringFromCharCode(value);\n  }\n\n  return output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n  if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n    if (strict) {\n      throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');\n    }\n\n    return false;\n  }\n\n  return true;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction createByte(codePoint, shift) {\n  return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n  if ((codePoint & 0xFFFFFF80) == 0) {\n    // 1-byte sequence\n    return stringFromCharCode(codePoint);\n  }\n\n  var symbol = '';\n\n  if ((codePoint & 0xFFFFF800) == 0) {\n    // 2-byte sequence\n    symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n  } else if ((codePoint & 0xFFFF0000) == 0) {\n    // 3-byte sequence\n    if (!checkScalarValue(codePoint, strict)) {\n      codePoint = 0xFFFD;\n    }\n\n    symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n    symbol += createByte(codePoint, 6);\n  } else if ((codePoint & 0xFFE00000) == 0) {\n    // 4-byte sequence\n    symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n    symbol += createByte(codePoint, 12);\n    symbol += createByte(codePoint, 6);\n  }\n\n  symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n  return symbol;\n}\n\nfunction utf8encode(string, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  var codePoints = ucs2decode(string);\n  var length = codePoints.length;\n  var index = -1;\n  var codePoint;\n  var byteString = '';\n\n  while (++index < length) {\n    codePoint = codePoints[index];\n    byteString += encodeCodePoint(codePoint, strict);\n  }\n\n  return byteString;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction readContinuationByte() {\n  if (byteIndex >= byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  var continuationByte = byteArray[byteIndex] & 0xFF;\n  byteIndex++;\n\n  if ((continuationByte & 0xC0) == 0x80) {\n    return continuationByte & 0x3F;\n  } // If we end up here, itâ€™s not a continuation byte\n\n\n  throw Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n  var byte1;\n  var byte2;\n  var byte3;\n  var byte4;\n  var codePoint;\n\n  if (byteIndex > byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  if (byteIndex == byteCount) {\n    return false;\n  } // Read first byte\n\n\n  byte1 = byteArray[byteIndex] & 0xFF;\n  byteIndex++; // 1-byte sequence (no continuation bytes)\n\n  if ((byte1 & 0x80) == 0) {\n    return byte1;\n  } // 2-byte sequence\n\n\n  if ((byte1 & 0xE0) == 0xC0) {\n    byte2 = readContinuationByte();\n    codePoint = (byte1 & 0x1F) << 6 | byte2;\n\n    if (codePoint >= 0x80) {\n      return codePoint;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 3-byte sequence (may include unpaired surrogates)\n\n\n  if ((byte1 & 0xF0) == 0xE0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n\n    if (codePoint >= 0x0800) {\n      return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 4-byte sequence\n\n\n  if ((byte1 & 0xF8) == 0xF0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    byte4 = readContinuationByte();\n    codePoint = (byte1 & 0x07) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n\n    if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n      return codePoint;\n    }\n  }\n\n  throw Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\n\nfunction utf8decode(byteString, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  byteArray = ucs2decode(byteString);\n  byteCount = byteArray.length;\n  byteIndex = 0;\n  var codePoints = [];\n  var tmp;\n\n  while ((tmp = decodeSymbol(strict)) !== false) {\n    codePoints.push(tmp);\n  }\n\n  return ucs2encode(codePoints);\n}\n\nmodule.exports = {\n  version: '2.1.2',\n  encode: utf8encode,\n  decode: utf8decode\n};","map":{"version":3,"sources":["C:/Users/gabe/Desktop/Pomo/Team5/client/node_modules/engine.io/build/parser-v3/utf8.js"],"names":["stringFromCharCode","String","fromCharCode","ucs2decode","string","output","counter","length","value","extra","charCodeAt","push","ucs2encode","array","index","checkScalarValue","codePoint","strict","Error","toString","toUpperCase","createByte","shift","encodeCodePoint","symbol","utf8encode","opts","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","utf8decode","tmp","module","exports","version","encode","decode"],"mappings":"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","sourcesContent":["/*! https://mths.be/utf8js v2.1.2 by @mathias */\nvar stringFromCharCode = String.fromCharCode;\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n    var output = [];\n    var counter = 0;\n    var length = string.length;\n    var value;\n    var extra;\n    while (counter < length) {\n        value = string.charCodeAt(counter++);\n        if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n            // high surrogate, and there is a next character\n            extra = string.charCodeAt(counter++);\n            if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n                output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n            }\n            else {\n                // unmatched surrogate; only append this code unit, in case the next\n                // code unit is the high surrogate of a surrogate pair\n                output.push(value);\n                counter--;\n            }\n        }\n        else {\n            output.push(value);\n        }\n    }\n    return output;\n}\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n    var length = array.length;\n    var index = -1;\n    var value;\n    var output = '';\n    while (++index < length) {\n        value = array[index];\n        if (value > 0xFFFF) {\n            value -= 0x10000;\n            output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n            value = 0xDC00 | value & 0x3FF;\n        }\n        output += stringFromCharCode(value);\n    }\n    return output;\n}\nfunction checkScalarValue(codePoint, strict) {\n    if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n        if (strict) {\n            throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n                ' is not a scalar value');\n        }\n        return false;\n    }\n    return true;\n}\n/*--------------------------------------------------------------------------*/\nfunction createByte(codePoint, shift) {\n    return stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\nfunction encodeCodePoint(codePoint, strict) {\n    if ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n        return stringFromCharCode(codePoint);\n    }\n    var symbol = '';\n    if ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n        symbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n    }\n    else if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n        if (!checkScalarValue(codePoint, strict)) {\n            codePoint = 0xFFFD;\n        }\n        symbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n        symbol += createByte(codePoint, 6);\n    }\n    else if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n        symbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n        symbol += createByte(codePoint, 12);\n        symbol += createByte(codePoint, 6);\n    }\n    symbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n    return symbol;\n}\nfunction utf8encode(string, opts) {\n    opts = opts || {};\n    var strict = false !== opts.strict;\n    var codePoints = ucs2decode(string);\n    var length = codePoints.length;\n    var index = -1;\n    var codePoint;\n    var byteString = '';\n    while (++index < length) {\n        codePoint = codePoints[index];\n        byteString += encodeCodePoint(codePoint, strict);\n    }\n    return byteString;\n}\n/*--------------------------------------------------------------------------*/\nfunction readContinuationByte() {\n    if (byteIndex >= byteCount) {\n        throw Error('Invalid byte index');\n    }\n    var continuationByte = byteArray[byteIndex] & 0xFF;\n    byteIndex++;\n    if ((continuationByte & 0xC0) == 0x80) {\n        return continuationByte & 0x3F;\n    }\n    // If we end up here, itâ€™s not a continuation byte\n    throw Error('Invalid continuation byte');\n}\nfunction decodeSymbol(strict) {\n    var byte1;\n    var byte2;\n    var byte3;\n    var byte4;\n    var codePoint;\n    if (byteIndex > byteCount) {\n        throw Error('Invalid byte index');\n    }\n    if (byteIndex == byteCount) {\n        return false;\n    }\n    // Read first byte\n    byte1 = byteArray[byteIndex] & 0xFF;\n    byteIndex++;\n    // 1-byte sequence (no continuation bytes)\n    if ((byte1 & 0x80) == 0) {\n        return byte1;\n    }\n    // 2-byte sequence\n    if ((byte1 & 0xE0) == 0xC0) {\n        byte2 = readContinuationByte();\n        codePoint = ((byte1 & 0x1F) << 6) | byte2;\n        if (codePoint >= 0x80) {\n            return codePoint;\n        }\n        else {\n            throw Error('Invalid continuation byte');\n        }\n    }\n    // 3-byte sequence (may include unpaired surrogates)\n    if ((byte1 & 0xF0) == 0xE0) {\n        byte2 = readContinuationByte();\n        byte3 = readContinuationByte();\n        codePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n        if (codePoint >= 0x0800) {\n            return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n        }\n        else {\n            throw Error('Invalid continuation byte');\n        }\n    }\n    // 4-byte sequence\n    if ((byte1 & 0xF8) == 0xF0) {\n        byte2 = readContinuationByte();\n        byte3 = readContinuationByte();\n        byte4 = readContinuationByte();\n        codePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n            (byte3 << 0x06) | byte4;\n        if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n            return codePoint;\n        }\n    }\n    throw Error('Invalid UTF-8 detected');\n}\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n    opts = opts || {};\n    var strict = false !== opts.strict;\n    byteArray = ucs2decode(byteString);\n    byteCount = byteArray.length;\n    byteIndex = 0;\n    var codePoints = [];\n    var tmp;\n    while ((tmp = decodeSymbol(strict)) !== false) {\n        codePoints.push(tmp);\n    }\n    return ucs2encode(codePoints);\n}\nmodule.exports = {\n    version: '2.1.2',\n    encode: utf8encode,\n    decode: utf8decode\n};\n"]},"metadata":{},"sourceType":"script"}