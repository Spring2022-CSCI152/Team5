{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serveFile = exports.restoreAdapter = exports.patchAdapter = void 0;\n\nconst socket_io_adapter_1 = require(\"socket.io-adapter\");\n\nconst fs_1 = require(\"fs\");\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst debug = (0, debug_1.default)(\"socket.io:adapter-uws\");\nconst SEPARATOR = \"\\x1f\"; // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\n\nconst {\n  addAll,\n  del,\n  broadcast\n} = socket_io_adapter_1.Adapter.prototype;\n\nfunction patchAdapter(app\n/* : TemplatedApp */\n) {\n  socket_io_adapter_1.Adapter.prototype.addAll = function (id, rooms) {\n    const isNew = !this.sids.has(id);\n    addAll.call(this, id, rooms);\n    const socket = this.nsp.sockets.get(id);\n\n    if (!socket) {\n      return;\n    }\n\n    if (socket.conn.transport.name === \"websocket\") {\n      subscribe(this.nsp.name, socket, isNew, rooms);\n      return;\n    }\n\n    if (isNew) {\n      socket.conn.on(\"upgrade\", () => {\n        const rooms = this.sids.get(id);\n        subscribe(this.nsp.name, socket, isNew, rooms);\n      });\n    }\n  };\n\n  socket_io_adapter_1.Adapter.prototype.del = function (id, room) {\n    del.call(this, id, room);\n    const socket = this.nsp.sockets.get(id);\n\n    if (socket && socket.conn.transport.name === \"websocket\") {\n      // @ts-ignore\n      const sessionId = socket.conn.id; // @ts-ignore\n\n      const websocket = socket.conn.transport.socket;\n      const topic = `${this.nsp.name}${SEPARATOR}${room}`;\n      debug(\"unsubscribe connection %s from topic %s\", sessionId, topic);\n      websocket.unsubscribe(topic);\n    }\n  };\n\n  socket_io_adapter_1.Adapter.prototype.broadcast = function (packet, opts) {\n    const useFastPublish = opts.rooms.size <= 1 && opts.except.size === 0;\n\n    if (!useFastPublish) {\n      broadcast.call(this, packet, opts);\n      return;\n    }\n\n    const flags = opts.flags || {};\n    const basePacketOpts = {\n      preEncoded: true,\n      volatile: flags.volatile,\n      compress: flags.compress\n    };\n    packet.nsp = this.nsp.name;\n    const encodedPackets = this.encoder.encode(packet);\n    const topic = opts.rooms.size === 0 ? this.nsp.name : `${this.nsp.name}${SEPARATOR}${opts.rooms.keys().next().value}`;\n    debug(\"fast publish to %s\", topic); // fast publish for clients connected with WebSocket\n\n    encodedPackets.forEach(encodedPacket => {\n      const isBinary = typeof encodedPacket !== \"string\"; // \"4\" being the message type in the Engine.IO protocol, see https://github.com/socketio/engine.io-protocol\n\n      app.publish(topic, isBinary ? encodedPacket : \"4\" + encodedPacket, isBinary);\n    });\n    this.apply(opts, socket => {\n      if (socket.conn.transport.name !== \"websocket\") {\n        // classic publish for clients connected with HTTP long-polling\n        socket.client.writeToEngine(encodedPackets, basePacketOpts);\n      }\n    });\n  };\n}\n\nexports.patchAdapter = patchAdapter;\n\nfunction subscribe(namespaceName, socket, isNew, rooms) {\n  // @ts-ignore\n  const sessionId = socket.conn.id; // @ts-ignore\n\n  const websocket = socket.conn.transport.socket;\n\n  if (isNew) {\n    debug(\"subscribe connection %s to topic %s\", sessionId, namespaceName);\n    websocket.subscribe(namespaceName);\n  }\n\n  rooms.forEach(room => {\n    const topic = `${namespaceName}${SEPARATOR}${room}`; // '#' can be used as wildcard\n\n    debug(\"subscribe connection %s to topic %s\", sessionId, topic);\n    websocket.subscribe(topic);\n  });\n}\n\nfunction restoreAdapter() {\n  socket_io_adapter_1.Adapter.prototype.addAll = addAll;\n  socket_io_adapter_1.Adapter.prototype.del = del;\n  socket_io_adapter_1.Adapter.prototype.broadcast = broadcast;\n}\n\nexports.restoreAdapter = restoreAdapter;\n\nconst toArrayBuffer = buffer => {\n  const {\n    buffer: arrayBuffer,\n    byteOffset,\n    byteLength\n  } = buffer;\n  return arrayBuffer.slice(byteOffset, byteOffset + byteLength);\n}; // imported from https://github.com/kolodziejczak-sz/uwebsocket-serve\n\n\nfunction serveFile(res\n/* : HttpResponse */\n, filepath) {\n  const {\n    size\n  } = (0, fs_1.statSync)(filepath);\n  const readStream = (0, fs_1.createReadStream)(filepath);\n\n  const destroyReadStream = () => !readStream.destroyed && readStream.destroy();\n\n  const onError = error => {\n    destroyReadStream();\n    throw error;\n  };\n\n  const onDataChunk = chunk => {\n    const arrayBufferChunk = toArrayBuffer(chunk);\n    const lastOffset = res.getWriteOffset();\n    const [ok, done] = res.tryEnd(arrayBufferChunk, size);\n\n    if (!done && !ok) {\n      readStream.pause();\n      res.onWritable(offset => {\n        const [ok, done] = res.tryEnd(arrayBufferChunk.slice(offset - lastOffset), size);\n\n        if (!done && ok) {\n          readStream.resume();\n        }\n\n        return ok;\n      });\n    }\n  };\n\n  res.onAborted(destroyReadStream);\n  readStream.on(\"data\", onDataChunk).on(\"error\", onError).on(\"end\", destroyReadStream);\n}\n\nexports.serveFile = serveFile;","map":{"version":3,"sources":["C:/Users/gabe/Desktop/Pomo/Team5/client/node_modules/socket.io/dist/uws.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","serveFile","restoreAdapter","patchAdapter","socket_io_adapter_1","require","fs_1","debug_1","debug","default","SEPARATOR","addAll","del","broadcast","Adapter","prototype","app","id","rooms","isNew","sids","has","call","socket","nsp","sockets","get","conn","transport","name","subscribe","on","room","sessionId","websocket","topic","unsubscribe","packet","opts","useFastPublish","size","except","flags","basePacketOpts","preEncoded","volatile","compress","encodedPackets","encoder","encode","keys","next","forEach","encodedPacket","isBinary","publish","apply","client","writeToEngine","namespaceName","toArrayBuffer","buffer","arrayBuffer","byteOffset","byteLength","slice","res","filepath","statSync","readStream","createReadStream","destroyReadStream","destroyed","destroy","onError","error","onDataChunk","chunk","arrayBufferChunk","lastOffset","getWriteOffset","ok","done","tryEnd","pause","onWritable","offset","resume","onAborted"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serveFile = exports.restoreAdapter = exports.patchAdapter = void 0;\nconst socket_io_adapter_1 = require(\"socket.io-adapter\");\nconst fs_1 = require(\"fs\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)(\"socket.io:adapter-uws\");\nconst SEPARATOR = \"\\x1f\"; // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst { addAll, del, broadcast } = socket_io_adapter_1.Adapter.prototype;\nfunction patchAdapter(app /* : TemplatedApp */) {\n    socket_io_adapter_1.Adapter.prototype.addAll = function (id, rooms) {\n        const isNew = !this.sids.has(id);\n        addAll.call(this, id, rooms);\n        const socket = this.nsp.sockets.get(id);\n        if (!socket) {\n            return;\n        }\n        if (socket.conn.transport.name === \"websocket\") {\n            subscribe(this.nsp.name, socket, isNew, rooms);\n            return;\n        }\n        if (isNew) {\n            socket.conn.on(\"upgrade\", () => {\n                const rooms = this.sids.get(id);\n                subscribe(this.nsp.name, socket, isNew, rooms);\n            });\n        }\n    };\n    socket_io_adapter_1.Adapter.prototype.del = function (id, room) {\n        del.call(this, id, room);\n        const socket = this.nsp.sockets.get(id);\n        if (socket && socket.conn.transport.name === \"websocket\") {\n            // @ts-ignore\n            const sessionId = socket.conn.id;\n            // @ts-ignore\n            const websocket = socket.conn.transport.socket;\n            const topic = `${this.nsp.name}${SEPARATOR}${room}`;\n            debug(\"unsubscribe connection %s from topic %s\", sessionId, topic);\n            websocket.unsubscribe(topic);\n        }\n    };\n    socket_io_adapter_1.Adapter.prototype.broadcast = function (packet, opts) {\n        const useFastPublish = opts.rooms.size <= 1 && opts.except.size === 0;\n        if (!useFastPublish) {\n            broadcast.call(this, packet, opts);\n            return;\n        }\n        const flags = opts.flags || {};\n        const basePacketOpts = {\n            preEncoded: true,\n            volatile: flags.volatile,\n            compress: flags.compress,\n        };\n        packet.nsp = this.nsp.name;\n        const encodedPackets = this.encoder.encode(packet);\n        const topic = opts.rooms.size === 0\n            ? this.nsp.name\n            : `${this.nsp.name}${SEPARATOR}${opts.rooms.keys().next().value}`;\n        debug(\"fast publish to %s\", topic);\n        // fast publish for clients connected with WebSocket\n        encodedPackets.forEach((encodedPacket) => {\n            const isBinary = typeof encodedPacket !== \"string\";\n            // \"4\" being the message type in the Engine.IO protocol, see https://github.com/socketio/engine.io-protocol\n            app.publish(topic, isBinary ? encodedPacket : \"4\" + encodedPacket, isBinary);\n        });\n        this.apply(opts, (socket) => {\n            if (socket.conn.transport.name !== \"websocket\") {\n                // classic publish for clients connected with HTTP long-polling\n                socket.client.writeToEngine(encodedPackets, basePacketOpts);\n            }\n        });\n    };\n}\nexports.patchAdapter = patchAdapter;\nfunction subscribe(namespaceName, socket, isNew, rooms) {\n    // @ts-ignore\n    const sessionId = socket.conn.id;\n    // @ts-ignore\n    const websocket = socket.conn.transport.socket;\n    if (isNew) {\n        debug(\"subscribe connection %s to topic %s\", sessionId, namespaceName);\n        websocket.subscribe(namespaceName);\n    }\n    rooms.forEach((room) => {\n        const topic = `${namespaceName}${SEPARATOR}${room}`; // '#' can be used as wildcard\n        debug(\"subscribe connection %s to topic %s\", sessionId, topic);\n        websocket.subscribe(topic);\n    });\n}\nfunction restoreAdapter() {\n    socket_io_adapter_1.Adapter.prototype.addAll = addAll;\n    socket_io_adapter_1.Adapter.prototype.del = del;\n    socket_io_adapter_1.Adapter.prototype.broadcast = broadcast;\n}\nexports.restoreAdapter = restoreAdapter;\nconst toArrayBuffer = (buffer) => {\n    const { buffer: arrayBuffer, byteOffset, byteLength } = buffer;\n    return arrayBuffer.slice(byteOffset, byteOffset + byteLength);\n};\n// imported from https://github.com/kolodziejczak-sz/uwebsocket-serve\nfunction serveFile(res /* : HttpResponse */, filepath) {\n    const { size } = (0, fs_1.statSync)(filepath);\n    const readStream = (0, fs_1.createReadStream)(filepath);\n    const destroyReadStream = () => !readStream.destroyed && readStream.destroy();\n    const onError = (error) => {\n        destroyReadStream();\n        throw error;\n    };\n    const onDataChunk = (chunk) => {\n        const arrayBufferChunk = toArrayBuffer(chunk);\n        const lastOffset = res.getWriteOffset();\n        const [ok, done] = res.tryEnd(arrayBufferChunk, size);\n        if (!done && !ok) {\n            readStream.pause();\n            res.onWritable((offset) => {\n                const [ok, done] = res.tryEnd(arrayBufferChunk.slice(offset - lastOffset), size);\n                if (!done && ok) {\n                    readStream.resume();\n                }\n                return ok;\n            });\n        }\n    };\n    res.onAborted(destroyReadStream);\n    readStream\n        .on(\"data\", onDataChunk)\n        .on(\"error\", onError)\n        .on(\"end\", destroyReadStream);\n}\nexports.serveFile = serveFile;\n"]},"metadata":{},"sourceType":"script"}