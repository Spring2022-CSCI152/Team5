{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabe\\\\Desktop\\\\Pomo\\\\Team5\\\\client\\\\src\\\\components\\\\TimerPage\\\\TimerDisplay\\\\QuestDisplay.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport axios from 'axios'; // implement custom themes with createtheme and theme provider eventually\n\nconst NewTaskHandler = _ref => {\n  let {\n    quests,\n    setQuests\n  } = _ref;\n  const [newQuest, setNewQuest] = useState(\"\");\n  const profile = JSON.parse(localStorage.getItem('profile'));\n  const userId = profile.result._id;\n\n  const handleQuestChange = event => {\n    setNewQuest(event.target.value);\n  };\n\n  const handleQuestAdd = () => {\n    const insertedQuest = {\n      user_id: userId,\n      task_name: newQuest\n    }; // wait for zack to implement feedback after a post request\n\n    axios.post(`http://localhost:5000/api/v1/users/tasks`, insertedQuest).then(res => {\n      setQuests(quests.concat(res.data.task));\n      setNewQuest('');\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: \"flex\",\n      mt: 1,\n      p: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Enter new task\",\n    variant: \"outlined\",\n    onChange: handleQuestChange,\n    value: newQuest,\n    size: \"small\",\n    sx: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: \"flex\",\n      alignItems: \"center\",\n      ml: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    onClick: handleQuestAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"+\")));\n};\n\nconst QuestDisplay = _ref2 => {\n  let {\n    setActiveTask\n  } = _ref2;\n  const [quests, setQuests] = useState([]);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const profile = JSON.parse(localStorage.getItem('profile'));\n  const userId = profile.result._id;\n\n  const handleClick = quest => {\n    setSelectedIndex(quest._id);\n    setActiveTask(quest.name);\n  };\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/v1/users/tasks?userId=${userId}`).then(res => {\n      if (res.data.tasks.length !== 0) {\n        setQuests(res.data.tasks);\n        setSelectedIndex(res.data.tasks[0]._id);\n        setActiveTask(res.data.tasks[0].name);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    sx: {\n      maxHeight: 105,\n      overflow: 'auto',\n      mt: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, quests.map(quest => /*#__PURE__*/React.createElement(ListItemButton, {\n    selected: selectedIndex === quest._id,\n    onClick: () => handleClick(quest),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \" \", quest.name, \" \"))), /*#__PURE__*/React.createElement(NewTaskHandler, {\n    setQuests: setQuests,\n    quests: quests,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default QuestDisplay;","map":{"version":3,"sources":["C:/Users/gabe/Desktop/Pomo/Team5/client/src/components/TimerPage/TimerDisplay/QuestDisplay.js"],"names":["React","useState","useEffect","List","ListItemButton","Button","TextField","Box","axios","NewTaskHandler","quests","setQuests","newQuest","setNewQuest","profile","JSON","parse","localStorage","getItem","userId","result","_id","handleQuestChange","event","target","value","handleQuestAdd","insertedQuest","user_id","task_name","post","then","res","concat","data","task","catch","err","console","log","display","mt","p","width","alignItems","ml","QuestDisplay","setActiveTask","selectedIndex","setSelectedIndex","handleClick","quest","name","get","tasks","length","maxHeight","overflow","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport axios from 'axios';\r\n// implement custom themes with createtheme and theme provider eventually\r\n\r\nconst NewTaskHandler = ({quests, setQuests}) => {\r\n    const [newQuest, setNewQuest] = useState(\"\")\r\n    const profile = JSON.parse(localStorage.getItem('profile'))\r\n    const userId = profile.result._id\r\n\r\n    const handleQuestChange = (event) => {\r\n        setNewQuest(event.target.value)\r\n    }\r\n\r\n    const handleQuestAdd = () => {\r\n        const insertedQuest = {\r\n            user_id: userId,\r\n            task_name: newQuest\r\n        }\r\n        // wait for zack to implement feedback after a post request\r\n        axios.post(`http://localhost:5000/api/v1/users/tasks`, insertedQuest)\r\n            .then(res => {\r\n                setQuests(quests.concat(res.data.task))\r\n                setNewQuest('')\r\n                })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\nreturn (\r\n    <Box sx={{display: \"flex\", mt: 1, p: 1}}>\r\n        <TextField id=\"outlined-basic\" label=\"Enter new task\" variant=\"outlined\" onChange={handleQuestChange} value={newQuest} size=\"small\" sx={{width: \"100%\"}} />\r\n        <Box sx={{display: \"flex\", alignItems: \"center\", ml: 2}}>\r\n            <Button variant={\"contained\"} size={\"small\"} onClick={handleQuestAdd}>+</Button>\r\n        </Box>\r\n    </Box>\r\n)\r\n}\r\n\r\nconst QuestDisplay = ({setActiveTask}) => {\r\n    const [quests, setQuests] = useState([])\r\n    const [selectedIndex, setSelectedIndex] = useState(0)\r\n    const profile = JSON.parse(localStorage.getItem('profile'))\r\n    const userId = profile.result._id\r\n\r\n    const handleClick = (quest) => {\r\n        setSelectedIndex(quest._id)\r\n        setActiveTask(quest.name)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/api/v1/users/tasks?userId=${userId}`)\r\n            .then(res => {\r\n                if (res.data.tasks.length !== 0){\r\n                    setQuests(res.data.tasks)\r\n                    setSelectedIndex(res.data.tasks[0]._id)\r\n                    setActiveTask(res.data.tasks[0].name)\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <Box>\r\n            <List sx={{maxHeight: 105, overflow: 'auto', mt: 5}}>\r\n                {quests.map(quest =>\r\n                    <ListItemButton selected={selectedIndex === quest._id} onClick={() => handleClick(quest)}> {quest.name} </ListItemButton>\r\n                )}\r\n            </List>\r\n            <NewTaskHandler setQuests={setQuests} quests={quests}/>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default QuestDisplay"]},"metadata":{},"sourceType":"module"}