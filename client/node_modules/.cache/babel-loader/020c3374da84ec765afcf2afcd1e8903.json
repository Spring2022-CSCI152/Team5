{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport useFormControl from '../FormControlUnstyled/useFormControl';\nimport extractEventHandlers from '../utils/extractEventHandlers';\nexport default function useInput(props, inputRef) {\n  const {\n    defaultValue,\n    disabled: disabledProp = false,\n    error: errorProp = false,\n    onBlur,\n    onChange,\n    onFocus,\n    required: requiredProp = false,\n    value: valueProp\n  } = props;\n  const formControlContext = useFormControl();\n  let value;\n  let required;\n  let disabled;\n  let error;\n\n  if (formControlContext) {\n    var _formControlContext$d, _formControlContext$r, _formControlContext$e;\n\n    value = formControlContext.value;\n    disabled = (_formControlContext$d = formControlContext.disabled) != null ? _formControlContext$d : false;\n    required = (_formControlContext$r = formControlContext.required) != null ? _formControlContext$r : false;\n    error = (_formControlContext$e = formControlContext.error) != null ? _formControlContext$e : false;\n  } else {\n    value = valueProp;\n    disabled = disabledProp;\n    required = requiredProp;\n    error = errorProp;\n  }\n\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['MUI: You have provided a `components.Input` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const internalInputRef = React.useRef(null);\n  const handleIncomingRef = useForkRef(inputRef, handleInputRefWarning);\n  const handleInputRef = useForkRef(internalInputRef, handleIncomingRef);\n  const [focused, setFocused] = React.useState(false); // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n  React.useEffect(() => {\n    if (!formControlContext && disabled && focused) {\n      setFocused(false); // @ts-ignore\n\n      onBlur == null ? void 0 : onBlur();\n    }\n  }, [formControlContext, disabled, focused, onBlur]);\n\n  const handleFocus = otherHandlers => event => {\n    var _otherHandlers$onFocu; // Fix a bug with IE11 where the focus/blur events are triggered\n    // while the component is disabled.\n\n\n    if (formControlContext != null && formControlContext.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);\n\n    if (formControlContext && formControlContext.onFocus) {\n      var _formControlContext$o;\n\n      formControlContext == null ? void 0 : (_formControlContext$o = formControlContext.onFocus) == null ? void 0 : _formControlContext$o.call(formControlContext);\n    } else {\n      setFocused(true);\n    }\n  };\n\n  const handleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n\n    if (formControlContext && formControlContext.onBlur) {\n      formControlContext.onBlur();\n    } else {\n      setFocused(false);\n    }\n  };\n\n  const handleChange = otherHandlers => function (event) {\n    var _formControlContext$o2, _otherHandlers$onChan;\n\n    if (!isControlled) {\n      const element = event.target || internalInputRef.current;\n\n      if (element == null) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Expected valid input target. Did you use a custom \\`components.Input\\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(17));\n      }\n    }\n\n    formControlContext == null ? void 0 : (_formControlContext$o2 = formControlContext.onChange) == null ? void 0 : _formControlContext$o2.call(formControlContext, event); // @ts-ignore\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event, ...args);\n  };\n\n  const handleClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n\n    if (internalInputRef.current && event.currentTarget === event.target) {\n      internalInputRef.current.focus();\n    }\n\n    (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n  };\n\n  const getRootProps = externalProps => {\n    // onBlur, onChange and onFocus are forwarded to the input slot.\n    const propsEventHandlers = extractEventHandlers(props, ['onBlur', 'onChange', 'onFocus']);\n\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n\n    return _extends({}, externalProps, externalEventHandlers, {\n      onClick: handleClick(externalEventHandlers)\n    });\n  };\n\n  const getInputProps = externalProps => {\n    const propsEventHandlers = {\n      onBlur,\n      onChange,\n      onFocus\n    };\n\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n\n    const mergedEventHandlers = _extends({}, externalProps, externalEventHandlers, {\n      onBlur: handleBlur(externalEventHandlers),\n      onChange: handleChange(externalEventHandlers),\n      onFocus: handleFocus(externalEventHandlers)\n    });\n\n    return _extends({}, mergedEventHandlers, {\n      'aria-invalid': error || undefined,\n      defaultValue: defaultValue,\n      ref: handleInputRef,\n      value: value,\n      required,\n      disabled\n    });\n  };\n\n  return {\n    disabled,\n    error,\n    focused,\n    formControlContext,\n    getInputProps,\n    getRootProps,\n    required,\n    value\n  };\n}","map":{"version":3,"sources":["C:/Users/gabe/Desktop/Pomo/Team5/client/node_modules/@mui/base/InputUnstyled/useInput.js"],"names":["_extends","formatMuiErrorMessage","_formatMuiErrorMessage","React","unstable_useForkRef","useForkRef","useFormControl","extractEventHandlers","useInput","props","inputRef","defaultValue","disabled","disabledProp","error","errorProp","onBlur","onChange","onFocus","required","requiredProp","value","valueProp","formControlContext","_formControlContext$d","_formControlContext$r","_formControlContext$e","current","isControlled","useRef","handleInputRefWarning","useCallback","instance","process","env","NODE_ENV","nodeName","focus","console","join","internalInputRef","handleIncomingRef","handleInputRef","focused","setFocused","useState","useEffect","handleFocus","otherHandlers","event","_otherHandlers$onFocu","stopPropagation","call","_formControlContext$o","handleBlur","_otherHandlers$onBlur","handleChange","_formControlContext$o2","_otherHandlers$onChan","element","target","Error","args","handleClick","_otherHandlers$onClic","currentTarget","onClick","getRootProps","externalProps","propsEventHandlers","externalEventHandlers","getInputProps","mergedEventHandlers","undefined","ref"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\r\nimport * as React from 'react';\r\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\r\nimport useFormControl from '../FormControlUnstyled/useFormControl';\r\nimport extractEventHandlers from '../utils/extractEventHandlers';\r\nexport default function useInput(props, inputRef) {\r\n  const {\r\n    defaultValue,\r\n    disabled: disabledProp = false,\r\n    error: errorProp = false,\r\n    onBlur,\r\n    onChange,\r\n    onFocus,\r\n    required: requiredProp = false,\r\n    value: valueProp\r\n  } = props;\r\n  const formControlContext = useFormControl();\r\n  let value;\r\n  let required;\r\n  let disabled;\r\n  let error;\r\n\r\n  if (formControlContext) {\r\n    var _formControlContext$d, _formControlContext$r, _formControlContext$e;\r\n\r\n    value = formControlContext.value;\r\n    disabled = (_formControlContext$d = formControlContext.disabled) != null ? _formControlContext$d : false;\r\n    required = (_formControlContext$r = formControlContext.required) != null ? _formControlContext$r : false;\r\n    error = (_formControlContext$e = formControlContext.error) != null ? _formControlContext$e : false;\r\n  } else {\r\n    value = valueProp;\r\n    disabled = disabledProp;\r\n    required = requiredProp;\r\n    error = errorProp;\r\n  }\r\n\r\n  const {\r\n    current: isControlled\r\n  } = React.useRef(value != null);\r\n  const handleInputRefWarning = React.useCallback(instance => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\r\n        console.error(['MUI: You have provided a `components.Input` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\\n'));\r\n      }\r\n    }\r\n  }, []);\r\n  const internalInputRef = React.useRef(null);\r\n  const handleIncomingRef = useForkRef(inputRef, handleInputRefWarning);\r\n  const handleInputRef = useForkRef(internalInputRef, handleIncomingRef);\r\n  const [focused, setFocused] = React.useState(false); // The blur won't fire when the disabled state is set on a focused input.\r\n  // We need to book keep the focused state manually.\r\n\r\n  React.useEffect(() => {\r\n    if (!formControlContext && disabled && focused) {\r\n      setFocused(false); // @ts-ignore\r\n\r\n      onBlur == null ? void 0 : onBlur();\r\n    }\r\n  }, [formControlContext, disabled, focused, onBlur]);\r\n\r\n  const handleFocus = otherHandlers => event => {\r\n    var _otherHandlers$onFocu;\r\n\r\n    // Fix a bug with IE11 where the focus/blur events are triggered\r\n    // while the component is disabled.\r\n    if (formControlContext != null && formControlContext.disabled) {\r\n      event.stopPropagation();\r\n      return;\r\n    }\r\n\r\n    (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);\r\n\r\n    if (formControlContext && formControlContext.onFocus) {\r\n      var _formControlContext$o;\r\n\r\n      formControlContext == null ? void 0 : (_formControlContext$o = formControlContext.onFocus) == null ? void 0 : _formControlContext$o.call(formControlContext);\r\n    } else {\r\n      setFocused(true);\r\n    }\r\n  };\r\n\r\n  const handleBlur = otherHandlers => event => {\r\n    var _otherHandlers$onBlur;\r\n\r\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\r\n\r\n    if (formControlContext && formControlContext.onBlur) {\r\n      formControlContext.onBlur();\r\n    } else {\r\n      setFocused(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = otherHandlers => (event, ...args) => {\r\n    var _formControlContext$o2, _otherHandlers$onChan;\r\n\r\n    if (!isControlled) {\r\n      const element = event.target || internalInputRef.current;\r\n\r\n      if (element == null) {\r\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Expected valid input target. Did you use a custom \\`components.Input\\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(17));\r\n      }\r\n    }\r\n\r\n    formControlContext == null ? void 0 : (_formControlContext$o2 = formControlContext.onChange) == null ? void 0 : _formControlContext$o2.call(formControlContext, event); // @ts-ignore\r\n\r\n    (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event, ...args);\r\n  };\r\n\r\n  const handleClick = otherHandlers => event => {\r\n    var _otherHandlers$onClic;\r\n\r\n    if (internalInputRef.current && event.currentTarget === event.target) {\r\n      internalInputRef.current.focus();\r\n    }\r\n\r\n    (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\r\n  };\r\n\r\n  const getRootProps = externalProps => {\r\n    // onBlur, onChange and onFocus are forwarded to the input slot.\r\n    const propsEventHandlers = extractEventHandlers(props, ['onBlur', 'onChange', 'onFocus']);\r\n\r\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\r\n\r\n    return _extends({}, externalProps, externalEventHandlers, {\r\n      onClick: handleClick(externalEventHandlers)\r\n    });\r\n  };\r\n\r\n  const getInputProps = externalProps => {\r\n    const propsEventHandlers = {\r\n      onBlur,\r\n      onChange,\r\n      onFocus\r\n    };\r\n\r\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\r\n\r\n    const mergedEventHandlers = _extends({}, externalProps, externalEventHandlers, {\r\n      onBlur: handleBlur(externalEventHandlers),\r\n      onChange: handleChange(externalEventHandlers),\r\n      onFocus: handleFocus(externalEventHandlers)\r\n    });\r\n\r\n    return _extends({}, mergedEventHandlers, {\r\n      'aria-invalid': error || undefined,\r\n      defaultValue: defaultValue,\r\n      ref: handleInputRef,\r\n      value: value,\r\n      required,\r\n      disabled\r\n    });\r\n  };\r\n\r\n  return {\r\n    disabled,\r\n    error,\r\n    focused,\r\n    formControlContext,\r\n    getInputProps,\r\n    getRootProps,\r\n    required,\r\n    value\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}