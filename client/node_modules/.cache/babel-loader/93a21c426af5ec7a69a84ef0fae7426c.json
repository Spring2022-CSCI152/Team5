{"ast":null,"code":"'use strict'; // limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\n\nvar MAX_BYTES = 65536; // Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\n\nvar MAX_UINT32 = 4294967295;\n\nfunction oldBrowser() {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11');\n}\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar crypto = global.crypto || global.msCrypto;\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes;\n} else {\n  module.exports = oldBrowser;\n}\n\nfunction randomBytes(size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes');\n  var bytes = Buffer.allocUnsafe(size);\n\n  if (size > 0) {\n    // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) {\n      // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES));\n      }\n    } else {\n      crypto.getRandomValues(bytes);\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes);\n    });\n  }\n\n  return bytes;\n}","map":{"version":3,"sources":["C:/Users/gabe/Desktop/Pomo/Team5/client/node_modules/randombytes/browser.js"],"names":["MAX_BYTES","MAX_UINT32","oldBrowser","Error","Buffer","require","crypto","global","msCrypto","getRandomValues","module","exports","randomBytes","size","cb","RangeError","bytes","allocUnsafe","generated","slice","process","nextTick"],"mappings":"AAAA,a,CAEA;AACA;;AACA,IAAIA,SAAS,GAAG,KAAhB,C,CAEA;AACA;;AACA,IAAIC,UAAU,GAAG,UAAjB;;AAEA,SAASC,UAAT,GAAuB;AACrB,QAAM,IAAIC,KAAJ,CAAU,gHAAV,CAAN;AACD;;AAED,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAApC;;AACA,IAAIE,MAAM,GAAGC,MAAM,CAACD,MAAP,IAAiBC,MAAM,CAACC,QAArC;;AAEA,IAAIF,MAAM,IAAIA,MAAM,CAACG,eAArB,EAAsC;AACpCC,EAAAA,MAAM,CAACC,OAAP,GAAiBC,WAAjB;AACD,CAFD,MAEO;AACLF,EAAAA,MAAM,CAACC,OAAP,GAAiBT,UAAjB;AACD;;AAED,SAASU,WAAT,CAAsBC,IAAtB,EAA4BC,EAA5B,EAAgC;AAC9B;AACA,MAAID,IAAI,GAAGZ,UAAX,EAAuB,MAAM,IAAIc,UAAJ,CAAe,iCAAf,CAAN;AAEvB,MAAIC,KAAK,GAAGZ,MAAM,CAACa,WAAP,CAAmBJ,IAAnB,CAAZ;;AAEA,MAAIA,IAAI,GAAG,CAAX,EAAc;AAAG;AACf,QAAIA,IAAI,GAAGb,SAAX,EAAsB;AAAE;AACtB;AACA,WAAK,IAAIkB,SAAS,GAAG,CAArB,EAAwBA,SAAS,GAAGL,IAApC,EAA0CK,SAAS,IAAIlB,SAAvD,EAAkE;AAChE;AACA;AACAM,QAAAA,MAAM,CAACG,eAAP,CAAuBO,KAAK,CAACG,KAAN,CAAYD,SAAZ,EAAuBA,SAAS,GAAGlB,SAAnC,CAAvB;AACD;AACF,KAPD,MAOO;AACLM,MAAAA,MAAM,CAACG,eAAP,CAAuBO,KAAvB;AACD;AACF;;AAED,MAAI,OAAOF,EAAP,KAAc,UAAlB,EAA8B;AAC5B,WAAOM,OAAO,CAACC,QAAR,CAAiB,YAAY;AAClCP,MAAAA,EAAE,CAAC,IAAD,EAAOE,KAAP,CAAF;AACD,KAFM,CAAP;AAGD;;AAED,SAAOA,KAAP;AACD","sourcesContent":["'use strict'\r\n\r\n// limit of Crypto.getRandomValues()\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\r\nvar MAX_BYTES = 65536\r\n\r\n// Node supports requesting up to this number of bytes\r\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\r\nvar MAX_UINT32 = 4294967295\r\n\r\nfunction oldBrowser () {\r\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\r\n}\r\n\r\nvar Buffer = require('safe-buffer').Buffer\r\nvar crypto = global.crypto || global.msCrypto\r\n\r\nif (crypto && crypto.getRandomValues) {\r\n  module.exports = randomBytes\r\n} else {\r\n  module.exports = oldBrowser\r\n}\r\n\r\nfunction randomBytes (size, cb) {\r\n  // phantomjs needs to throw\r\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\r\n\r\n  var bytes = Buffer.allocUnsafe(size)\r\n\r\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\r\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\r\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\r\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\r\n        // buffer.slice automatically checks if the end is past the end of\r\n        // the buffer so we don't have to here\r\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\r\n      }\r\n    } else {\r\n      crypto.getRandomValues(bytes)\r\n    }\r\n  }\r\n\r\n  if (typeof cb === 'function') {\r\n    return process.nextTick(function () {\r\n      cb(null, bytes)\r\n    })\r\n  }\r\n\r\n  return bytes\r\n}\r\n"]},"metadata":{},"sourceType":"script"}