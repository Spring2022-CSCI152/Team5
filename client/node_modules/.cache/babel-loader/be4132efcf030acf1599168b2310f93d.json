{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/Desktop/WebDev/Team5/client/src/components/TimerPage/TimerPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport { Button, Box, Stack, ButtonGroup } from '@material-ui/core';\nimport axios from 'axios';\nimport Timer from './TimerDisplay/Timer';\nimport CharacterDisplay from './TimerDisplay/CharacterDisplay';\nimport RoomDisplay from './TimerDisplay/RoomDisplay';\nimport QuestDisplay from './TimerDisplay/QuestDisplay';\nimport TimeMath from '../../services/TimeMath'; // Menu\n\nimport TimerAdjust from '../TimerPage/Menu/TimerAdjust';\nimport FriendsList from '../TimerPage/Menu/FriendsList';\nimport ItemShop from '../TimerPage/Menu/ItemShop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TimerPage() {\n  _s();\n\n  const [pomodoro, setPomodoro] = useState(25);\n  const [shortBreak, setShortBreak] = useState(5);\n  const [longBreak, setLongBreak] = useState(20);\n  const [timerSeconds, setTimerSeconds] = useState(TimeMath.convMinSec(pomodoro));\n  const [timerMode, setTimerMode] = useState('Questing');\n  const [isRunning, setIsRunning] = useState(false);\n  const [pomosCompleted, setPomosCompleted] = useState(0);\n  const [activeTask, setActiveTask] = useState('');\n  const [character, setCharacter] = useState({\n    char_name: \"\",\n    stats: {},\n    inventory: []\n  }); // Can probably refactor this into a smaller component, but for now it is easier to see how everything working\n  // Gold: Plus 20 gold per each finished study timer,\n  // plus 100 per each long break achieved\n  //\n  // XP: Plus 50 xp per each finished study timer,\n  // plus 200 for each long break achieved\n  //\n\n  const questComplete = type => {\n    let updatedXp = type === \"LC\" ? character.stats.current_xp + 100 : character.stats.current_xp + 50;\n    const updatedGold = type === \"LC\" ? character.stats.gold + 100 : character.stats.gold + 50;\n    let updatedLevel = character.stats.level;\n    let updatedReqExp = character.stats.xp_to_next_level;\n\n    if (updatedXp >= character.stats.xp_to_next_level) {\n      updatedXp = 0;\n      updatedLevel = updatedLevel + 1;\n      updatedReqExp = updatedReqExp + 100;\n    }\n\n    let updatedCharacter = {\n      user_id: userId,\n      current_xp: updatedXp,\n      gold: updatedGold,\n      level: updatedLevel,\n      xp_to_next_level: updatedReqExp\n    };\n    console.log(updatedXp);\n    setCharacter({ ...character,\n      stats: { ...character.stats,\n        gold: updatedGold,\n        current_xp: updatedXp,\n        level: updatedLevel,\n        xp_to_next_level: updatedReqExp\n      }\n    }); // error when trying to post a 0 to updatedXP stat\n\n    axios.put(`http://localhost:5000/api/v1/users/character`, updatedCharacter).then(r => console.log(r)).catch(e => console.log(e.response));\n  };\n\n  const handleModeChange = () => {\n    if (timerMode === 'Questing' && pomosCompleted === 3) {\n      setTimerMode('Long Camp');\n      setPomosCompleted(pomosCompleted => pomosCompleted + 1);\n      setTimerSeconds(TimeMath.convMinSec(longBreak));\n      questComplete(\"LC\");\n    } else if (timerMode === 'Questing') {\n      setTimerMode('Short Camp');\n      setTimerSeconds(TimeMath.convMinSec(shortBreak));\n      setPomosCompleted(pomosCompleted => pomosCompleted + 1);\n      questComplete(\"Q\");\n    } else {\n      setTimerMode('Questing');\n      setTimerSeconds(TimeMath.convMinSec(pomodoro));\n    }\n  };\n\n  const timeoutID = 0;\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/v1/users/character?userId=${userId}`).then(response => {\n      setCharacter(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  useEffect(() => {\n    if (isRunning && timerSeconds > 0) {\n      const timeoutID = setTimeout(() => {\n        setTimerSeconds(timerSeconds => timerSeconds - 1);\n      }, 1000);\n    }\n\n    if (timerSeconds === 0) {\n      setIsRunning(false);\n      clearTimeout(timeoutID);\n      handleModeChange();\n    }\n\n    clearTimeout(timeoutID);\n  }, [isRunning, timerSeconds]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      justifyContent: 'center',\n      textAlign: 'center',\n      alignItems: 'baseline',\n      pt: 5,\n      pb: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(RoomDisplay, {\n      pomosCompleted: pomosCompleted,\n      multiplier: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 5,\n          minWidth: 400\n        },\n        children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: TimeMath.normalise(Math.abs(timerSeconds - TimeMath.convMinSec(pomodoro)), pomodoro),\n          sx: {\n            height: 12,\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {\n          timerMode: timerMode,\n          timer: TimeMath.formatSeconds(timerSeconds),\n          reward: pomosCompleted % 2 === 0 ? '`Gold`' : 'Exp',\n          activeTask: activeTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        variant: 'contained',\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setIsRunning(true),\n          children: \"START\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setIsRunning(false);\n            clearTimeout(timeoutID);\n          },\n          children: \"STOP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(QuestDisplay, {\n        setActiveTask: setActiveTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        ml: 10,\n        width: '9%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CharacterDisplay, {\n        character: character,\n        setCharacter: setCharacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: 'row',\n        children: [/*#__PURE__*/_jsxDEV(TimerAdjust, {\n          pomodoro: pomodoro,\n          setPomodoro: setPomodoro,\n          shortBreak: shortBreak,\n          setShortBreak: setShortBreak,\n          longBreak: longBreak,\n          setLongBreak: setLongBreak,\n          setTimerSeconds: setTimerSeconds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FriendsList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(ItemShop, {\n          character: character,\n          setCharacter: setCharacter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 11\n  }, this);\n}\n\n_s(TimerPage, \"W78gtH1rpfqqJFp6BVdqyLgJ4Ok=\");\n\n_c = TimerPage;\nexport default TimerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerPage\");","map":{"version":3,"sources":["/Users/johnny/Desktop/WebDev/Team5/client/src/components/TimerPage/TimerPage.js"],"names":["React","useState","useEffect","LinearProgress","Button","Box","Stack","ButtonGroup","axios","Timer","CharacterDisplay","RoomDisplay","QuestDisplay","TimeMath","TimerAdjust","FriendsList","ItemShop","TimerPage","pomodoro","setPomodoro","shortBreak","setShortBreak","longBreak","setLongBreak","timerSeconds","setTimerSeconds","convMinSec","timerMode","setTimerMode","isRunning","setIsRunning","pomosCompleted","setPomosCompleted","activeTask","setActiveTask","character","setCharacter","char_name","stats","inventory","questComplete","type","updatedXp","current_xp","updatedGold","gold","updatedLevel","level","updatedReqExp","xp_to_next_level","updatedCharacter","user_id","userId","console","log","put","then","r","catch","e","response","handleModeChange","timeoutID","get","data","error","setTimeout","clearTimeout","display","justifyContent","textAlign","alignItems","pt","pb","mb","minWidth","normalise","Math","abs","height","width","formatSeconds","ml","flexDirection"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport LinearProgress from '@mui/material/LinearProgress';\nimport {Button, Box, Stack, ButtonGroup} from '@material-ui/core';\n\nimport axios from 'axios';\n\nimport Timer from './TimerDisplay/Timer'\nimport CharacterDisplay from './TimerDisplay/CharacterDisplay'\nimport RoomDisplay from './TimerDisplay/RoomDisplay'\nimport QuestDisplay from './TimerDisplay/QuestDisplay'\nimport TimeMath from '../../services/TimeMath'\n// Menu\nimport TimerAdjust from '../TimerPage/Menu/TimerAdjust'\nimport FriendsList from '../TimerPage/Menu/FriendsList'\nimport ItemShop from '../TimerPage/Menu/ItemShop'\n\nfunction TimerPage() {\n\n    const [ pomodoro , setPomodoro ] = useState(25)\n    const [ shortBreak , setShortBreak ] = useState(5)\n    const [ longBreak , setLongBreak ] = useState(20)\n    const [ timerSeconds , setTimerSeconds ] = useState(TimeMath.convMinSec(pomodoro))\n    const [ timerMode , setTimerMode ] = useState('Questing')\n    const [ isRunning, setIsRunning ] = useState(false)\n    const [ pomosCompleted, setPomosCompleted ] = useState(0);\n    const [ activeTask, setActiveTask ] = useState('')\n    const [ character, setCharacter ] = useState({char_name: \"\", stats: {}, inventory: []})\n    // Can probably refactor this into a smaller component, but for now it is easier to see how everything working\n    // Gold: Plus 20 gold per each finished study timer,\n    // plus 100 per each long break achieved\n    //\n    // XP: Plus 50 xp per each finished study timer,\n    // plus 200 for each long break achieved\n    //\n    const questComplete = (type) => {\n\n        let updatedXp = type === \"LC\" ? character.stats.current_xp + 100 : character.stats.current_xp + 50\n        const updatedGold = type === \"LC\" ? character.stats.gold + 100 : character.stats.gold + 50\n        let updatedLevel = character.stats.level\n        let updatedReqExp = character.stats.xp_to_next_level\n\n        if (updatedXp >= character.stats.xp_to_next_level) {\n            updatedXp = 0;\n            updatedLevel = updatedLevel + 1;\n            updatedReqExp = updatedReqExp + 100;\n        }\n\n        let updatedCharacter = {\n            user_id: userId,\n            current_xp: updatedXp,\n            gold: updatedGold,\n            level: updatedLevel,\n            xp_to_next_level: updatedReqExp\n        }\n\n        console.log(updatedXp)\n        setCharacter({...character, stats: {...character.stats, gold: updatedGold, current_xp: updatedXp, level: updatedLevel, xp_to_next_level: updatedReqExp}})\n        // error when trying to post a 0 to updatedXP stat\n        axios.put(`http://localhost:5000/api/v1/users/character`, updatedCharacter)\n            .then(r => console.log(r))\n            .catch(e => console.log(e.response))\n    }\n\n    const handleModeChange = () => {\n      if (timerMode === 'Questing' && pomosCompleted === 3){\n          setTimerMode('Long Camp');\n          setPomosCompleted(pomosCompleted => pomosCompleted + 1);\n          setTimerSeconds(TimeMath.convMinSec(longBreak));\n          questComplete(\"LC\")\n      }\n      else if (timerMode === 'Questing'){\n          setTimerMode('Short Camp');\n          setTimerSeconds(TimeMath.convMinSec(shortBreak));\n          setPomosCompleted(pomosCompleted => pomosCompleted + 1);\n          questComplete(\"Q\")\n      } else{\n          setTimerMode('Questing')\n          setTimerSeconds(TimeMath.convMinSec(pomodoro));\n\n      }\n    }\n\n    const timeoutID = 0;\n\n    useEffect(() => {\n        axios.get(`http://localhost:5000/api/v1/users/character?userId=${userId}`)\n            .then(\n                response => {\n                    setCharacter(response.data)\n                }\n            )\n            .catch(error => {\n                console.log(error)\n            })\n\n    }, [] )\n\n    useEffect(() => {\n        if(isRunning && timerSeconds > 0) {\n            const timeoutID = setTimeout(() => {\n                setTimerSeconds(timerSeconds => timerSeconds - 1)\n            }, 1000)\n        }\n        if (timerSeconds === 0){\n            setIsRunning(false);\n            clearTimeout(timeoutID);\n            handleModeChange()\n        }\n        clearTimeout(timeoutID);\n    }, [isRunning, timerSeconds]);\n\n  return (\n          <Box sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              textAlign: 'center',\n              alignItems: 'baseline',\n              pt: 5, pb: 5,\n          }}>\n\n              <RoomDisplay pomosCompleted={pomosCompleted} multiplier={1} />\n\n              <Box>\n                  <Box sx={{mb: 5, minWidth: 400}}>\n                      <LinearProgress variant='determinate' value={TimeMath.normalise(Math.abs(timerSeconds - TimeMath.convMinSec(pomodoro)),pomodoro)} sx={{height: 12, width: '100%'}}/>\n                      <Timer\n                          timerMode={timerMode}\n                          timer={TimeMath.formatSeconds(timerSeconds)}\n                          reward={pomosCompleted % 2 === 0 ? '`Gold`' : 'Exp'}\n                          activeTask = {activeTask}\n                      />\n                  </Box>\n                  <ButtonGroup variant={'contained'}>\n                      <Button onClick={() => setIsRunning(true)}>START</Button>\n                      <Button onClick={() => {\n                          setIsRunning(false)\n                          clearTimeout(timeoutID)\n                      }}>STOP</Button>\n                  </ButtonGroup>\n                <QuestDisplay setActiveTask={setActiveTask} />\n              </Box>\n\n              <Box sx={{ml: 10, width: '9%', display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                  <CharacterDisplay character={character} setCharacter={setCharacter}/>\n                  <Stack direction={'row'}>\n                          <TimerAdjust pomodoro={pomodoro} setPomodoro={setPomodoro} shortBreak={shortBreak} setShortBreak={setShortBreak} longBreak={longBreak} setLongBreak={setLongBreak} setTimerSeconds={setTimerSeconds} />\n                          <FriendsList/>\n                          <ItemShop character={character} setCharacter={setCharacter} />\n                  </Stack>\n              </Box>\n          </Box>\n  );\n}\n\nexport default TimerPage;"]},"metadata":{},"sourceType":"module"}