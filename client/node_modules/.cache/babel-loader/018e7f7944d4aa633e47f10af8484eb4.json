{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/Desktop/WebDev/Team5/client/src/components/TimerPage/Menu/Inventory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport Dialog from '@mui/material/Dialog';\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport BackpackIcon from '@mui/icons-material/Backpack';\nimport Card from \"@mui/material/Card\";\nimport Typography from \"@mui/material/Typography\";\nimport { getInventory, getUser } from \"../../../services/ApiCalls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InventoryItem = _ref => {\n  let {\n    itemName,\n    itemType\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      textAlign: \"center\",\n      border: \"red solid 1\",\n      minWidth: 100,\n      height: 100,\n      m: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      children: [itemName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 28\n      }, this), itemType, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = InventoryItem;\n\nconst InventoryModal = _ref2 => {\n  let {\n    open,\n    handleClose,\n    inventory,\n    isLoading\n  } = _ref2;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n        onClickAway: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 5\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n        onClickAway: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 5\n          },\n          children: [console.log(inventory.length), inventory.length === 0 ? \"You have no items\" : inventory.items.map(item => /*#__PURE__*/_jsxDEV(InventoryItem, {\n            itemName: item.name,\n            itemType: item.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 102\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c2 = InventoryModal;\n\nconst Inventory = () => {\n  _s();\n\n  const [inventory, setInventory] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    getInventory().then(response => {\n      console.log(response.data);\n      setInventory(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [inventory]);\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleClickOpen,\n      children: /*#__PURE__*/_jsxDEV(BackpackIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InventoryModal, {\n      open: open,\n      handleClose: handleClose,\n      inventory: inventory,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Inventory, \"rd8FyjpnTIs/jZXWapZ+rYPsfnY=\");\n\n_c3 = Inventory;\nexport default Inventory;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"InventoryItem\");\n$RefreshReg$(_c2, \"InventoryModal\");\n$RefreshReg$(_c3, \"Inventory\");","map":{"version":3,"sources":["/Users/johnny/Desktop/WebDev/Team5/client/src/components/TimerPage/Menu/Inventory.js"],"names":["React","useEffect","useState","IconButton","Box","Dialog","ClickAwayListener","BackpackIcon","Card","Typography","getInventory","getUser","InventoryItem","itemName","itemType","display","flexDirection","textAlign","border","minWidth","height","m","InventoryModal","open","handleClose","inventory","isLoading","p","console","log","length","items","map","item","name","type","Inventory","setInventory","setLoading","then","response","data","catch","error","setOpen","handleClickOpen"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport Dialog from '@mui/material/Dialog';\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport BackpackIcon from '@mui/icons-material/Backpack';\nimport Card from \"@mui/material/Card\";\nimport Typography from \"@mui/material/Typography\";\nimport {getInventory, getUser} from \"../../../services/ApiCalls\";\n\nconst InventoryItem = ({itemName, itemType}) => {\n    return (\n        <Card sx={{display: \"flex\", flexDirection: \"column\", textAlign: \"center\", border: \"red solid 1\" ,minWidth: 100, height: 100, m: 2}}>\n            <Typography>\n                {itemName} <br />\n                {itemType} <br />\n            </Typography>\n        </Card>\n    )\n}\n\nconst InventoryModal = ({open, handleClose, inventory, isLoading}) => {\n\n    if (isLoading){\n        return (\n            <Dialog open={open}>\n                <ClickAwayListener onClickAway={handleClose}>\n                    <Box sx={{p: 5}}>\n                        <p>Loading</p>\n                    </Box>\n                </ClickAwayListener>\n            </Dialog>\n        )\n    }\n    else {\n        return (\n            <Dialog open={open}>\n                <ClickAwayListener onClickAway={handleClose}>\n                    <Box sx={{p: 5}}>\n                        {console.log(inventory.length)}\n                        {inventory.length === 0  ? \"You have no items\" : inventory.items.map(item => <InventoryItem itemName={item.name} itemType={item.type} />)}\n                    </Box>\n                </ClickAwayListener>\n            </Dialog>\n        )\n    }\n}\n\nconst Inventory = () => {\n    const [inventory, setInventory] = useState([])\n    const [isLoading, setLoading] = useState(true)\n\n    useEffect(() => {\n        getInventory()\n            .then(\n                response => {\n                    console.log(response.data)\n                    setInventory(response.data)\n                    setLoading(false)\n                }\n            )\n            .catch(error => {\n                console.log(error)\n            })\n\n    }, [inventory] )\n\n    const [open, setOpen] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true)\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    return(\n        <Box>\n            <IconButton onClick={handleClickOpen}>\n                <BackpackIcon />\n            </IconButton>\n            <InventoryModal open={open} handleClose={handleClose} inventory={inventory} isLoading={isLoading}/>\n\n        </Box>\n\n    )\n}\n\nexport default Inventory"]},"metadata":{},"sourceType":"module"}