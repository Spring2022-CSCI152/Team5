{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juanc\\\\Desktop\\\\KingdomDT\\\\FS-CSCI150-F21-Team6\\\\client\\\\src\\\\components\\\\TimerPage\\\\TimerDisplay\\\\QuestDisplay.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport axios from 'axios'; // implement custom themes with createtheme and theme provider eventually\n\nconst NewTaskHandler = _ref => {\n  let {\n    quests,\n    setQuests\n  } = _ref;\n  const [newQuest, setNewQuest] = useState();\n\n  const handleQuestChange = event => {\n    setNewQuest(event.target.value);\n  };\n\n  const handleQuestAdd = () => {\n    // needs to be reworked for dealing with api but core functionality is there\n    const newQuestObj = {\n      id: 4,\n      title: newQuest,\n      totalPomoDone: 2\n    };\n    setQuests(quests.concat(newQuestObj));\n    setNewQuest('');\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: \"flex\",\n      mt: 1,\n      p: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Enter new task\",\n    variant: \"outlined\",\n    onChange: handleQuestChange,\n    value: newQuest,\n    size: \"small\",\n    sx: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: \"flex\",\n      alignItems: \"center\",\n      ml: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    onClick: handleQuestAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"+\")));\n};\n\nconst QuestDisplay = _ref2 => {\n  let {\n    setActiveTask\n  } = _ref2;\n  const [quests, setQuests] = useState([]);\n  const [selectedIndex, setSelectedIndex] = useState(1);\n\n  const handleClick = id => {\n    setSelectedIndex(id);\n    setActiveTask(quests[id - 1].title);\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/data').then(res => {\n      setQuests(res.data[0].tasks);\n      setActiveTask(res.data[0].tasks[selectedIndex - 1].title);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    sx: {\n      maxHeight: 105,\n      overflow: 'auto',\n      mt: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, quests.map(quest => /*#__PURE__*/React.createElement(ListItemButton, {\n    selected: selectedIndex === quest.id,\n    onClick: () => {\n      handleClick(quest.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 42\n    }\n  }, quest.title))), /*#__PURE__*/React.createElement(NewTaskHandler, {\n    setQuests: setQuests,\n    quests: quests,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default QuestDisplay;","map":{"version":3,"sources":["C:/Users/juanc/Desktop/KingdomDT/FS-CSCI150-F21-Team6/client/src/components/TimerPage/TimerDisplay/QuestDisplay.js"],"names":["React","useState","useEffect","List","ListItemButton","Button","TextField","Box","axios","NewTaskHandler","quests","setQuests","newQuest","setNewQuest","handleQuestChange","event","target","value","handleQuestAdd","newQuestObj","id","title","totalPomoDone","concat","display","mt","p","width","alignItems","ml","QuestDisplay","setActiveTask","selectedIndex","setSelectedIndex","handleClick","get","then","res","data","tasks","maxHeight","overflow","map","quest"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport axios from 'axios';\r\n// implement custom themes with createtheme and theme provider eventually\r\n\r\nconst NewTaskHandler = ({quests, setQuests}) => {\r\n    const [newQuest, setNewQuest] = useState()\r\n\r\n    const handleQuestChange = (event) => {\r\n        setNewQuest(event.target.value)\r\n    }\r\n\r\n    const handleQuestAdd = () => {\r\n// needs to be reworked for dealing with api but core functionality is there\r\n        const newQuestObj = {\r\n            id: 4,\r\n            title: newQuest,\r\n            totalPomoDone: 2\r\n        }\r\n        setQuests(quests.concat(newQuestObj))\r\n        setNewQuest('')\r\n    }\r\n\r\nreturn (\r\n    <Box sx={{display: \"flex\", mt: 1, p: 1}}>\r\n        <TextField id=\"outlined-basic\" label=\"Enter new task\" variant=\"outlined\" onChange={handleQuestChange} value={newQuest} size=\"small\" sx={{width: \"100%\"}} />\r\n        <Box sx={{display: \"flex\", alignItems: \"center\", ml: 2}}>\r\n            <Button variant={\"contained\"} size={\"small\"} onClick={handleQuestAdd}>+</Button>\r\n        </Box>\r\n    </Box>\r\n)\r\n}\r\n\r\nconst QuestDisplay = ({setActiveTask}) => {\r\n    const [quests, setQuests] = useState([])\r\n    const [selectedIndex, setSelectedIndex] = useState(1)\r\n\r\n    const handleClick = (id) => {\r\n        setSelectedIndex(id)\r\n        setActiveTask(quests[id - 1].title)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/data')\r\n            .then(res => {\r\n                setQuests(res.data[0].tasks)\r\n                setActiveTask(res.data[0].tasks[selectedIndex - 1].title)\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <List sx={{maxHeight: 105, overflow: 'auto', mt: 5}}>\r\n                {\r\n                    quests.map(quest =>  <ListItemButton selected={selectedIndex === quest.id} onClick={() => {handleClick(quest.id)}}>{quest.title}</ListItemButton>)\r\n                }\r\n            </List>\r\n            <NewTaskHandler setQuests={setQuests} quests={quests}/>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default QuestDisplay"]},"metadata":{},"sourceType":"module"}