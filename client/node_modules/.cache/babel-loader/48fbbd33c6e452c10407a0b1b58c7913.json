{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebSocket = void 0;\n\nconst transport_1 = require(\"../transport\");\n\nconst debug_1 = require(\"debug\");\n\nconst debug = (0, debug_1.default)(\"engine:ws\");\n\nclass WebSocket extends transport_1.Transport {\n  /**\n   * WebSocket transport\n   *\n   * @param {http.IncomingMessage}\n   * @api public\n   */\n  constructor(req) {\n    super(req);\n    this.socket = req.websocket;\n    this.socket.on(\"message\", (data, isBinary) => {\n      const message = isBinary ? data : data.toString();\n      debug('received \"%s\"', message);\n      super.onData(message);\n    });\n    this.socket.once(\"close\", this.onClose.bind(this));\n    this.socket.on(\"error\", this.onError.bind(this));\n    this.writable = true;\n    this.perMessageDeflate = null;\n  }\n  /**\n   * Transport name\n   *\n   * @api public\n   */\n\n\n  get name() {\n    return \"websocket\";\n  }\n  /**\n   * Advertise upgrade support.\n   *\n   * @api public\n   */\n\n\n  get handlesUpgrades() {\n    return true;\n  }\n  /**\n   * Advertise framing support.\n   *\n   * @api public\n   */\n\n\n  get supportsFraming() {\n    return true;\n  }\n  /**\n   * Writes a packet payload.\n   *\n   * @param {Array} packets\n   * @api private\n   */\n\n\n  send(packets) {\n    const packet = packets.shift();\n\n    if (typeof packet === \"undefined\") {\n      this.writable = true;\n      this.emit(\"drain\");\n      return;\n    } // always creates a new object since ws modifies it\n\n\n    const opts = {};\n\n    if (packet.options) {\n      opts.compress = packet.options.compress;\n    }\n\n    const send = data => {\n      if (this.perMessageDeflate) {\n        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n\n        if (len < this.perMessageDeflate.threshold) {\n          opts.compress = false;\n        }\n      }\n\n      debug('writing \"%s\"', data);\n      this.writable = false;\n      this.socket.send(data, opts, err => {\n        if (err) return this.onError(\"write error\", err.stack);\n        this.send(packets);\n      });\n    };\n\n    if (packet.options && typeof packet.options.wsPreEncoded === \"string\") {\n      send(packet.options.wsPreEncoded);\n    } else {\n      this.parser.encodePacket(packet, this.supportsBinary, send);\n    }\n  }\n  /**\n   * Closes the transport.\n   *\n   * @api private\n   */\n\n\n  doClose(fn) {\n    debug(\"closing\");\n    this.socket.close();\n    fn && fn();\n  }\n\n}\n\nexports.WebSocket = WebSocket;","map":{"version":3,"sources":["C:/Users/gabe/Desktop/Pomo/Team5/client/node_modules/engine.io/build/transports/websocket.js"],"names":["Object","defineProperty","exports","value","WebSocket","transport_1","require","debug_1","debug","default","Transport","constructor","req","socket","websocket","on","data","isBinary","message","toString","onData","once","onClose","bind","onError","writable","perMessageDeflate","name","handlesUpgrades","supportsFraming","send","packets","packet","shift","emit","opts","options","compress","len","Buffer","byteLength","length","threshold","err","stack","wsPreEncoded","parser","encodePacket","supportsBinary","doClose","fn","close"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocket = void 0;\nconst transport_1 = require(\"../transport\");\nconst debug_1 = require(\"debug\");\nconst debug = (0, debug_1.default)(\"engine:ws\");\nclass WebSocket extends transport_1.Transport {\n    /**\n     * WebSocket transport\n     *\n     * @param {http.IncomingMessage}\n     * @api public\n     */\n    constructor(req) {\n        super(req);\n        this.socket = req.websocket;\n        this.socket.on(\"message\", (data, isBinary) => {\n            const message = isBinary ? data : data.toString();\n            debug('received \"%s\"', message);\n            super.onData(message);\n        });\n        this.socket.once(\"close\", this.onClose.bind(this));\n        this.socket.on(\"error\", this.onError.bind(this));\n        this.writable = true;\n        this.perMessageDeflate = null;\n    }\n    /**\n     * Transport name\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Advertise upgrade support.\n     *\n     * @api public\n     */\n    get handlesUpgrades() {\n        return true;\n    }\n    /**\n     * Advertise framing support.\n     *\n     * @api public\n     */\n    get supportsFraming() {\n        return true;\n    }\n    /**\n     * Writes a packet payload.\n     *\n     * @param {Array} packets\n     * @api private\n     */\n    send(packets) {\n        const packet = packets.shift();\n        if (typeof packet === \"undefined\") {\n            this.writable = true;\n            this.emit(\"drain\");\n            return;\n        }\n        // always creates a new object since ws modifies it\n        const opts = {};\n        if (packet.options) {\n            opts.compress = packet.options.compress;\n        }\n        const send = data => {\n            if (this.perMessageDeflate) {\n                const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                if (len < this.perMessageDeflate.threshold) {\n                    opts.compress = false;\n                }\n            }\n            debug('writing \"%s\"', data);\n            this.writable = false;\n            this.socket.send(data, opts, err => {\n                if (err)\n                    return this.onError(\"write error\", err.stack);\n                this.send(packets);\n            });\n        };\n        if (packet.options && typeof packet.options.wsPreEncoded === \"string\") {\n            send(packet.options.wsPreEncoded);\n        }\n        else {\n            this.parser.encodePacket(packet, this.supportsBinary, send);\n        }\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api private\n     */\n    doClose(fn) {\n        debug(\"closing\");\n        this.socket.close();\n        fn && fn();\n    }\n}\nexports.WebSocket = WebSocket;\n"]},"metadata":{},"sourceType":"script"}